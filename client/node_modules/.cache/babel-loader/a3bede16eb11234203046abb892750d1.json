{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/components/setup/SetupEvent.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport styled from \"styled-components\";\n\nconst SetupEvent = ({\n  uiStore\n}) => {\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"event\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"event\",\n    id: \"event\",\n    type: \"checkbox\",\n    onChange: uiStore.toggleCheckedEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), uiStore.adminLanguage === \"nl\" ? content.nl.event : content.fr.event), uiStore.event ? React.createElement(React.Fragment, null, React.createElement(EventTxt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? content.nl.eventName : content.fr.eventName), React.createElement(TextField, {\n    label: uiStore.adminLanguage === \"nl\" ? content.nl.eventNameLabel : content.fr.eventNameLabel,\n    margin: \"normal\",\n    variant: \"outlined\",\n    style: {\n      width: 300\n    },\n    onChange: e => uiStore.addEventName(e.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })) : React.createElement(EventTxt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? content.nl.eventTxt : content.fr.eventTxt));\n};\n\nconst content = {\n  nl: {\n    event: \"er is momenteel een event gaande op deze locatie\",\n    eventTxt: \"Op deze manier krijgt de gebruiker meer informatie over het evenement waar zijn of haar kaartje zich bevindt.\",\n    eventName: \"Voer hieronder de naam van het evenement in\",\n    eventNameLabel: \"Eventnaam\"\n  },\n  fr: {\n    event: \"Il y a actuellement un événement à cet endroit\",\n    eventTxt: \"Il est ainsi possible de montrer plus en détail où les cartes postales sont localisés.\",\n    eventName: \"Saisissez le nom de l'événement ci-dessous\",\n    eventNameLabel: \"Nom d'evenement\"\n  }\n};\nconst EventTxt = styled.p`\n  font-size: 2rem;\n  max-width: 40rem;\n  color: #bababa;\n  font-weight: 600;\n  padding-top: 1rem;\n`;\nconst Label = styled.label`\n  font-size: 2.5rem;\n  color: #8089ce;\n  font-weight: 600;\n`;\nexport default inject(\"uiStore\")(observer(SetupEvent));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/components/setup/SetupEvent.jsx"],"names":["React","inject","observer","TextField","styled","SetupEvent","uiStore","toggleCheckedEvent","adminLanguage","content","nl","event","fr","eventName","eventNameLabel","width","e","addEventName","currentTarget","value","eventTxt","EventTxt","p","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAClC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAEA,OAAO,CAACC,kBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGD,OAAO,CAACE,aAAR,KAA0B,IAA1B,GAAiCC,OAAO,CAACC,EAAR,CAAWC,KAA5C,GAAoDF,OAAO,CAACG,EAAR,CAAWD,KAPlE,CADF,EAWGL,OAAO,CAACK,KAAR,GACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACE,aAAR,KAA0B,IAA1B,GACGC,OAAO,CAACC,EAAR,CAAWG,SADd,GAEGJ,OAAO,CAACG,EAAR,CAAWC,SAHjB,CADF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EACHP,OAAO,CAACE,aAAR,KAA0B,IAA1B,GACIC,OAAO,CAACC,EAAR,CAAWI,cADf,GAEIL,OAAO,CAACG,EAAR,CAAWE,cAJnB;AAME,IAAA,MAAM,EAAC,QANT;AAOE,IAAA,OAAO,EAAC,UAPV;AAQE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KART;AASE,IAAA,QAAQ,EAAEC,CAAC,IAAIV,OAAO,CAACW,YAAR,CAAqBD,CAAC,CAACE,aAAF,CAAgBC,KAArC,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,GAoBC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,OAAO,CAACE,aAAR,KAA0B,IAA1B,GACGC,OAAO,CAACC,EAAR,CAAWU,QADd,GAEGX,OAAO,CAACG,EAAR,CAAWQ,QAHjB,CA/BJ,CADF;AAwCD,CAzCD;;AA2CA,MAAMX,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE;AACFC,IAAAA,KAAK,EAAE,kDADL;AAEFS,IAAAA,QAAQ,EACN,+GAHA;AAIFP,IAAAA,SAAS,EAAE,6CAJT;AAKFC,IAAAA,cAAc,EAAE;AALd,GADU;AAQdF,EAAAA,EAAE,EAAE;AACFD,IAAAA,KAAK,EAAE,gDADL;AAEFS,IAAAA,QAAQ,EACN,wFAHA;AAIFP,IAAAA,SAAS,EAAE,4CAJT;AAKFC,IAAAA,cAAc,EAAE;AALd;AARU,CAAhB;AAiBA,MAAMO,QAAQ,GAAGjB,MAAM,CAACkB,CAAE;;;;;;CAA1B;AAQA,MAAMC,KAAK,GAAGnB,MAAM,CAACoB,KAAM;;;;CAA3B;AAMA,eAAevB,MAAM,CAAC,SAAD,CAAN,CAAkBC,QAAQ,CAACG,UAAD,CAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport styled from \"styled-components\";\n\nconst SetupEvent = ({ uiStore }) => {\n  return (\n    <section>\n      <Label htmlFor=\"event\">\n        <input\n          name=\"event\"\n          id=\"event\"\n          type=\"checkbox\"\n          onChange={uiStore.toggleCheckedEvent}\n        />\n        {uiStore.adminLanguage === \"nl\" ? content.nl.event : content.fr.event}\n      </Label>\n\n      {uiStore.event ? (\n        <>\n          <EventTxt>\n            {uiStore.adminLanguage === \"nl\"\n              ? content.nl.eventName\n              : content.fr.eventName}\n          </EventTxt>\n          <TextField\n            label={\n              uiStore.adminLanguage === \"nl\"\n                ? content.nl.eventNameLabel\n                : content.fr.eventNameLabel\n            }\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ width: 300 }}\n            onChange={e => uiStore.addEventName(e.currentTarget.value)}\n          />\n        </>\n      ) : (\n        <EventTxt>\n          {uiStore.adminLanguage === \"nl\"\n            ? content.nl.eventTxt\n            : content.fr.eventTxt}\n        </EventTxt>\n      )}\n    </section>\n  );\n};\n\nconst content = {\n  nl: {\n    event: \"er is momenteel een event gaande op deze locatie\",\n    eventTxt:\n      \"Op deze manier krijgt de gebruiker meer informatie over het evenement waar zijn of haar kaartje zich bevindt.\",\n    eventName: \"Voer hieronder de naam van het evenement in\",\n    eventNameLabel: \"Eventnaam\"\n  },\n  fr: {\n    event: \"Il y a actuellement un événement à cet endroit\",\n    eventTxt:\n      \"Il est ainsi possible de montrer plus en détail où les cartes postales sont localisés.\",\n    eventName: \"Saisissez le nom de l'événement ci-dessous\",\n    eventNameLabel: \"Nom d'evenement\"\n  }\n};\n\nconst EventTxt = styled.p`\n  font-size: 2rem;\n  max-width: 40rem;\n  color: #bababa;\n  font-weight: 600;\n  padding-top: 1rem;\n`;\n\nconst Label = styled.label`\n  font-size: 2.5rem;\n  color: #8089ce;\n  font-weight: 600;\n`;\n\nexport default inject(\"uiStore\")(observer(SetupEvent));\n"]},"metadata":{},"sourceType":"module"}