{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\n\nconst SetupUserLanguage = ({\n  uiStore\n}) => {\n  return React.createElement(\"setUserLanguageContainer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Kies de standaardtaal van de \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"gebruiker\")) : React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Choisissez la langue par d\\xE9faut de \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"l'utilisateur\")), React.createElement(Button, {\n    variant: uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\",\n    onClick: () => uiStore.setUserLanguage(\"nl\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"NL\"), React.createElement(Button, {\n    variant: uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\",\n    onClick: () => uiStore.setUserLanguage(\"fr\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"FR\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Deze taal kan op ieder moment aangepast worden door de gebruiker tijdens het gebruik van de installatie.\"));\n};\n\nconst setUserLanguageContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Title = styled.h2`\n  font-weight: bold;\n  color: #8089ce;\n  font-size: 5rem;\n  max-width: 60rem;\n  padding: 2rem 0;\n  text-align: center;\n\n  && span {\n    color: #4e5587;\n  }\n`;\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx"],"names":["React","inject","observer","Button","styled","SetupUserLanguage","uiStore","adminLanguage","userLanguage","setUserLanguage","setUserLanguageContainer","section","Title","h2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACzC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,aAAR,KAA0B,IAA1B,GACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD/B,CADD,GAKC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADrC,CANJ,EAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAED,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,IAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,EAiBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEH,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,IAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAvBF,CADF;AA8BD,CA/BD;;AAiCA,MAAMC,wBAAwB,GAAGN,MAAM,CAACO,OAAQ;;;;CAAhD;AAMA,MAAMC,KAAK,GAAGR,MAAM,CAACS,EAAG;;;;;;;;;;;CAAxB;AAaA,eAAeZ,MAAM,CAAC,SAAD,CAAN,CAAkBC,QAAQ,CAACG,iBAAD,CAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport styled from \"styled-components\";\n\nconst SetupUserLanguage = ({ uiStore }) => {\n  return (\n    <setUserLanguageContainer>\n      {uiStore.adminLanguage === \"nl\" ? (\n        <Title>\n          Kies de standaardtaal van de <span>gebruiker</span>\n        </Title>\n      ) : (\n        <Title>\n          Choisissez la langue par d√©faut de <span>l'utilisateur</span>\n        </Title>\n      )}\n\n      <Button\n        variant={uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\"}\n        onClick={() => uiStore.setUserLanguage(\"nl\")}\n      >\n        NL\n      </Button>\n      <Button\n        variant={uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\"}\n        onClick={() => uiStore.setUserLanguage(\"fr\")}\n      >\n        FR\n      </Button>\n      <p>\n        Deze taal kan op ieder moment aangepast worden door de gebruiker tijdens\n        het gebruik van de installatie.\n      </p>\n    </setUserLanguageContainer>\n  );\n};\n\nconst setUserLanguageContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  font-weight: bold;\n  color: #8089ce;\n  font-size: 5rem;\n  max-width: 60rem;\n  padding: 2rem 0;\n  text-align: center;\n\n  && span {\n    color: #4e5587;\n  }\n`;\n\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));\n"]},"metadata":{},"sourceType":"module"}