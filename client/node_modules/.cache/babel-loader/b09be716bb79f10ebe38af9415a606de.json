{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport UIStore from \"../store/UIStore\";\nimport styled from \"styled-components\";\n\nconst ThemesList = ({\n  writeStore,\n  uiStore\n}) => {\n  const handleClickTheme = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [{\n    nl: \"kunst\",\n    fr: \"art\",\n    en: \"art\"\n  }, {\n    nl: \"culinair\",\n    fr: \"culinaire\",\n    en: \"culinary\"\n  }, {\n    nl: \"actualiteit\",\n    fr: \"actualite\",\n    en: \"news\"\n  }, {\n    nl: \"technologie\",\n    fr: \"technologie\",\n    en: \"technology\"\n  }, {\n    nl: \"natuur\",\n    fr: \"nature\",\n    en: \"nature\"\n  }, {\n    nl: \"toerisme\",\n    fr: \"tourisme\",\n    en: \"tourism\"\n  }];\n  return React.createElement(React.Fragment, null, themes.map(theme => React.createElement(ThemeButton, {\n    img: UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr,\n    key: theme,\n    onClick: () => handleClickTheme(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, uiStore.userLanguage === \"nl\" ? theme.nl : theme.fr))));\n};\n\nconst ThemeButton = styled.button`\n  background-image: url(${props => props.img}.png);\n  border: none;\n  width: 15rem;\n  height: 10rem;\n`;\nexport default inject(`writeStore`, `uiStore`)(observer(ThemesList));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx"],"names":["React","inject","observer","UIStore","styled","ThemesList","writeStore","uiStore","handleClickTheme","e","theme","themes","nl","fr","en","map","userLanguage","ThemeButton","button","props","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAC9C,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5BH,IAAAA,UAAU,CAACI,KAAX,GAAmBD,CAAnB;AACD,GAFD;;AAIA,QAAME,MAAM,GAAG,CACb;AACEC,IAAAA,EAAE,EAAE,OADN;AAEEC,IAAAA,EAAE,EAAE,KAFN;AAGEC,IAAAA,EAAE,EAAE;AAHN,GADa,EAMb;AACEF,IAAAA,EAAE,EAAE,UADN;AAEEC,IAAAA,EAAE,EAAE,WAFN;AAGEC,IAAAA,EAAE,EAAE;AAHN,GANa,EAWb;AACEF,IAAAA,EAAE,EAAE,aADN;AAEEC,IAAAA,EAAE,EAAE,WAFN;AAGEC,IAAAA,EAAE,EAAE;AAHN,GAXa,EAgBb;AACEF,IAAAA,EAAE,EAAE,aADN;AAEEC,IAAAA,EAAE,EAAE,aAFN;AAGEC,IAAAA,EAAE,EAAE;AAHN,GAhBa,EAqBb;AACEF,IAAAA,EAAE,EAAE,QADN;AAEEC,IAAAA,EAAE,EAAE,QAFN;AAGEC,IAAAA,EAAE,EAAE;AAHN,GArBa,EA0Bb;AACEF,IAAAA,EAAE,EAAE,UADN;AAEEC,IAAAA,EAAE,EAAE,UAFN;AAGEC,IAAAA,EAAE,EAAE;AAHN,GA1Ba,CAAf;AAiCA,SACE,0CACGH,MAAM,CAACI,GAAP,CAAWL,KAAK,IACf,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEP,OAAO,CAACa,YAAR,KAAyB,IAAzB,GAAgCN,KAAK,CAACE,EAAtC,GAA2CF,KAAK,CAACG,EADxD;AAEE,IAAA,GAAG,EAAEH,KAFP;AAGE,IAAA,OAAO,EAAE,MAAMF,gBAAgB,CAACE,KAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,OAAO,CAACS,YAAR,KAAyB,IAAzB,GAAgCN,KAAK,CAACE,EAAtC,GAA2CF,KAAK,CAACG,EAArD,CALF,CADD,CADH,CADF;AAaD,CAnDD;;AAqDA,MAAMI,WAAW,GAAGb,MAAM,CAACc,MAAO;0BACRC,KAAK,IAAIA,KAAK,CAACC,GAAI;;;;CAD7C;AAOA,eAAenB,MAAM,CAAE,YAAF,EAAgB,SAAhB,CAAN,CAAgCC,QAAQ,CAACG,UAAD,CAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport UIStore from \"../store/UIStore\";\nimport styled from \"styled-components\";\n\nconst ThemesList = ({ writeStore, uiStore }) => {\n  const handleClickTheme = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [\n    {\n      nl: \"kunst\",\n      fr: \"art\",\n      en: \"art\"\n    },\n    {\n      nl: \"culinair\",\n      fr: \"culinaire\",\n      en: \"culinary\"\n    },\n    {\n      nl: \"actualiteit\",\n      fr: \"actualite\",\n      en: \"news\"\n    },\n    {\n      nl: \"technologie\",\n      fr: \"technologie\",\n      en: \"technology\"\n    },\n    {\n      nl: \"natuur\",\n      fr: \"nature\",\n      en: \"nature\"\n    },\n    {\n      nl: \"toerisme\",\n      fr: \"tourisme\",\n      en: \"tourism\"\n    }\n  ];\n\n  return (\n    <>\n      {themes.map(theme => (\n        <ThemeButton\n          img={UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr}\n          key={theme}\n          onClick={() => handleClickTheme(theme)}\n        >\n          <p>{uiStore.userLanguage === \"nl\" ? theme.nl : theme.fr}</p>\n        </ThemeButton>\n      ))}\n    </>\n  );\n};\n\nconst ThemeButton = styled.button`\n  background-image: url(${props => props.img}.png);\n  border: none;\n  width: 15rem;\n  height: 10rem;\n`;\n\nexport default inject(`writeStore`, `uiStore`)(observer(ThemesList));\n"]},"metadata":{},"sourceType":"module"}