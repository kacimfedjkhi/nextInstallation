{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/containers/Write.jsx\";\nimport React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport styled from \"styled-components\";\nimport BottomButtons from \"../components/BottomButtons\";\nimport Card from \"../components/Card\";\nimport ThemesList from \"../components/Themes\";\nimport MessageInput from \"../components/MessageInput\";\nimport ControlCard from \"../components/ControlCard\";\nimport backgroundImage from \"../assets/img/choiceBg.png\";\nimport steps from \"../assets/img/steps/steps_1.png\";\nimport steps2 from \"../assets/img/steps/steps_2.png\";\nimport steps3 from \"../assets/img/steps/steps_3.png\";\nimport imageButton from \"../assets/img/steps/steps_3.png\";\n\nconst Write = ({\n  writeStore,\n  uiStore\n}) => {\n  const activeStep = writeStore.activeStep; //const activeStep = 2;\n\n  const renderInput = i => {\n    switch (i) {\n      case 0:\n        return React.createElement(ThemesList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(MessageInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(ControlCard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n\n      default:\n        return null;\n    }\n  };\n\n  const getSteps = active => {\n    switch (active) {\n      case 0:\n        return steps;\n        break;\n\n      case 1:\n        return steps2;\n        break;\n\n      case 2:\n        return steps3;\n        break;\n\n      default:\n        return steps;\n    }\n  };\n\n  return React.createElement(StyledPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(RowLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Steps, {\n    img: getSteps(activeStep),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Current step: \", activeStep)), React.createElement(StepTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, writeStore.getStepTitle(activeStep)), renderInput(activeStep)), React.createElement(CardSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ChangeImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Kies een andere foto\"), \"foto \", writeStore.image + 1, \" /5\", React.createElement(ImageButton, {\n    onClick: writeStore.handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Change image\")), React.createElement(Card, {\n    isFlipped: writeStore.cardFlipped,\n    theme: writeStore.theme,\n    message: writeStore.message,\n    image: writeStore.image,\n    store: writeStore,\n    locationCreated: uiStore.selectedLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(BottomButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst RowLayout = styled.section`\n  display: flex;\n`;\nconst Steps = styled.div`\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 55rem;\n  height: 13rem;\n\n  & p {\n    display: none;\n  }\n`;\nconst StepTitle = styled.h2`\n  font-size: 3rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  color: #8089ce;\n  max-width: 50rem;\n  line-height: 4rem;\n  padding: 5rem 0;\n`;\nconst CardSection = styled.div`\n  position: relative;\n  right: -10rem;\n  top: 5rem;\n`;\nconst ChangeImage = styled.div``;\nconst ImageButton = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${imageButton})\n`;\nWrite.propTypes = {\n  writeStore: PropTypes.observableObject.isRequired\n};\nexport default inject(`writeStore`, `uiStore`)(observer(Write));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/containers/Write.jsx"],"names":["React","inject","observer","PropTypes","styled","BottomButtons","Card","ThemesList","MessageInput","ControlCard","backgroundImage","steps","steps2","steps3","imageButton","Write","writeStore","uiStore","activeStep","renderInput","i","getSteps","active","getStepTitle","image","handleChangeImage","cardFlipped","theme","message","selectedLocation","StyledPage","section","RowLayout","Steps","div","props","img","StepTitle","h2","CardSection","ChangeImage","ImageButton","button","propTypes","observableObject","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport styled from \"styled-components\";\n\nimport BottomButtons from \"../components/BottomButtons\";\nimport Card from \"../components/Card\";\nimport ThemesList from \"../components/Themes\";\nimport MessageInput from \"../components/MessageInput\";\nimport ControlCard from \"../components/ControlCard\";\n\nimport backgroundImage from \"../assets/img/choiceBg.png\";\nimport steps from \"../assets/img/steps/steps_1.png\";\nimport steps2 from \"../assets/img/steps/steps_2.png\";\nimport steps3 from \"../assets/img/steps/steps_3.png\";\n\nimport imageButton from \"../assets/img/steps/steps_3.png\";\n\nconst Write = ({ writeStore, uiStore }) => {\n  const activeStep = writeStore.activeStep;\n  //const activeStep = 2;\n\n  const renderInput = i => {\n    switch (i) {\n      case 0:\n        return <ThemesList />;\n      case 1:\n        return <MessageInput />;\n      case 2:\n        return <ControlCard />;\n      default:\n        return null;\n    }\n  };\n\n  const getSteps = active => {\n    switch (active) {\n      case 0:\n        return steps;\n        break;\n      case 1:\n        return steps2;\n        break;\n      case 2:\n        return steps3;\n        break;\n      default:\n        return steps;\n    }\n  };\n\n  return (\n    <StyledPage>\n      <RowLayout>\n        <div>\n          <Steps img={getSteps(activeStep)}>\n            <p>Current step: {activeStep}</p>\n          </Steps>\n          <StepTitle>{writeStore.getStepTitle(activeStep)}</StepTitle>\n          {renderInput(activeStep)}\n        </div>\n        <CardSection>\n          <ChangeImage>\n            <p>Kies een andere foto</p>\n            foto {writeStore.image + 1} /5\n            <ImageButton onClick={writeStore.handleChangeImage}>\n              Change image\n            </ImageButton>\n          </ChangeImage>\n          <Card\n            isFlipped={writeStore.cardFlipped}\n            theme={writeStore.theme}\n            message={writeStore.message}\n            image={writeStore.image}\n            store={writeStore}\n            locationCreated={uiStore.selectedLocation}\n          />\n        </CardSection>\n      </RowLayout>\n      <BottomButtons />\n    </StyledPage>\n  );\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RowLayout = styled.section`\n  display: flex;\n`;\n\nconst Steps = styled.div`\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 55rem;\n  height: 13rem;\n\n  & p {\n    display: none;\n  }\n`;\n\nconst StepTitle = styled.h2`\n  font-size: 3rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  color: #8089ce;\n  max-width: 50rem;\n  line-height: 4rem;\n  padding: 5rem 0;\n`;\n\nconst CardSection = styled.div`\n  position: relative;\n  right: -10rem;\n  top: 5rem;\n`;\n\nconst ChangeImage = styled.div``;\n\nconst ImageButton = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${imageButton})\n`;\n\nWrite.propTypes = {\n  writeStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`writeStore`, `uiStore`)(observer(Write));\n"]},"metadata":{},"sourceType":"module"}