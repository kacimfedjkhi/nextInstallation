{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport UIStore from \"../store/UIStore\";\n\nconst ThemesList = ({\n  writeStore\n}) => {\n  const handleClick = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [art, \"culinair\", \"news\", \"cultur \", \"nature\", \"tourism\"];\n  return React.createElement(React.Fragment, null, themes.map(theme => React.createElement(ThemeButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr)));\n};\n\nexport default inject(`writeStore`)(observer(ThemesList));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx"],"names":["React","inject","observer","Chip","UIStore","ThemesList","writeStore","handleClick","e","theme","themes","art","map","userLanguage","nl","fr"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvBF,IAAAA,UAAU,CAACG,KAAX,GAAmBD,CAAnB;AACD,GAFD;;AAIA,QAAME,MAAM,GAAG,CACZC,GADY,EAKb,UALa,EAMb,MANa,EAOb,SAPa,EAQb,QARa,EASb,SATa,CAAf;AAYA,SACE,0CACGD,MAAM,CAACE,GAAP,CAAWH,KAAK,IACf,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACS,YAAR,KAAyB,IAAzB,GAAgCJ,KAAK,CAACK,EAAtC,GAA2CL,KAAK,CAACM,EADpD,CADD,CADH,CADF;AASD,CA1BD;;AA4BA,eAAed,MAAM,CAAE,YAAF,CAAN,CAAqBC,QAAQ,CAACG,UAAD,CAA7B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport UIStore from \"../store/UIStore\";\n\nconst ThemesList = ({ writeStore }) => {\n  const handleClick = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [\n    (art: {\n      nl: \"kunst\",\n      fr: \"art\"\n    }),\n    \"culinair\",\n    \"news\",\n    \"cultur \",\n    \"nature\",\n    \"tourism\"\n  ];\n\n  return (\n    <>\n      {themes.map(theme => (\n        <ThemeButton>\n          {UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr}\n        </ThemeButton>\n      ))}\n    </>\n  );\n};\n\nexport default inject(`writeStore`)(observer(ThemesList));\n"]},"metadata":{},"sourceType":"module"}