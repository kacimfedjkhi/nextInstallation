{"ast":null,"code":"import _slicedToArray from \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Setup.jsx\";\nimport React, { useState } from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport { ROUTES } from \"../constants\";\nimport SetupLocation from \"../components/setup/SetupLocation\";\nimport SetupEvent from \"../components/setup/SetupEvent\";\nimport SetupUserLanguage from \"../components/setup/SetupUserLanguage\";\nimport backgroundImage from \"../assets/img/adminBg.jpg\";\nimport configurationButton from \"../assets/img/configurationButton.png\";\nimport nextArrow from \"../assets/img/arrowRight.png\";\n\nconst Setup = ({\n  uiStore\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const handleClickSetup = () => {\n    setCount(count + 1);\n  };\n\n  return React.createElement(StyledPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, count === 0 ? React.createElement(SetupUserLanguage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : null, count === 1 ? React.createElement(React.Fragment, null, React.createElement(SetupLocation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(SetupEvent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : null, count === 1 ? React.createElement(Link, {\n    to: ROUTES.home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ConfigurationBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? content.nl.startBtn : content.fr.startBtn, React.createElement(\"img\", {\n    src: nextArrow,\n    width: \"35\",\n    alt: \"language divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))) : React.createElement(ConfigurationBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? content.nl.startBtn : content.fr.startBtn, React.createElement(\"img\", {\n    src: nextArrow,\n    width: \"35\",\n    alt: \"language divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })));\n};\n\nconst content = {\n  nl: {\n    btnTxt: \"De installatie verder configureren\",\n    startBtn: \"De installatie opstarten\"\n  },\n  fr: {\n    btnTxt: \"Configurer davantage l'installation\",\n    startBtn: \"Mise en service de l'installation\"\n  }\n};\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nconst ConfigurationBtn = styled.button`\n  background-image: url(${configurationButton});\n  background-size: contain;\n  background-repeat: no-repeat;\n  border: none;\n  background-color: transparent;\n  width: 55rem;\n  height: 8rem;\n\n  font-size: 2.5rem;\n  color: white;\n  font-family: \"Nunito\";\n  font-weight: bold;\n\n  transform: translateX(25%);\n\n  &:focus {\n    outline: none;\n    transform: scale(0.95) translateX(25%);\n  }\n\n  && img {\n    margin-left: 1rem;\n  }\n`;\nSetup.propTypes = {\n  uiStore: PropTypes.observableObject.isRequired\n};\nexport default inject(`uiStore`)(observer(Setup));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Setup.jsx"],"names":["React","useState","inject","observer","PropTypes","Link","Button","styled","ROUTES","SetupLocation","SetupEvent","SetupUserLanguage","backgroundImage","configurationButton","nextArrow","Setup","uiStore","count","setCount","handleClickSetup","home","adminLanguage","content","nl","startBtn","fr","btnTxt","StyledPage","section","ConfigurationBtn","button","propTypes","observableObject","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\n\nimport { ROUTES } from \"../constants\";\nimport SetupLocation from \"../components/setup/SetupLocation\";\nimport SetupEvent from \"../components/setup/SetupEvent\";\nimport SetupUserLanguage from \"../components/setup/SetupUserLanguage\";\n\nimport backgroundImage from \"../assets/img/adminBg.jpg\";\nimport configurationButton from \"../assets/img/configurationButton.png\";\nimport nextArrow from \"../assets/img/arrowRight.png\";\n\nconst Setup = ({ uiStore }) => {\n  const [count, setCount] = useState(0);\n\n  const handleClickSetup = () => {\n    setCount(count + 1);\n  };\n  return (\n    <StyledPage>\n      {count === 0 ? <SetupUserLanguage /> : null}\n      {count === 1 ? (\n        <>\n          <SetupLocation />\n          <SetupEvent />\n        </>\n      ) : null}\n\n      {count === 1 ? (\n        <Link to={ROUTES.home}>\n          <ConfigurationBtn>\n            {uiStore.adminLanguage === \"nl\"\n              ? content.nl.startBtn\n              : content.fr.startBtn}\n\n            <img src={nextArrow} width=\"35\" alt=\"language divider\" />\n          </ConfigurationBtn>\n        </Link>\n      ) : (\n        <ConfigurationBtn>\n          {uiStore.adminLanguage === \"nl\"\n            ? content.nl.startBtn\n            : content.fr.startBtn}\n\n          <img src={nextArrow} width=\"35\" alt=\"language divider\" />\n        </ConfigurationBtn>\n      )}\n    </StyledPage>\n  );\n};\n\nconst content = {\n  nl: {\n    btnTxt: \"De installatie verder configureren\",\n    startBtn: \"De installatie opstarten\"\n  },\n  fr: {\n    btnTxt: \"Configurer davantage l'installation\",\n    startBtn: \"Mise en service de l'installation\"\n  }\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst ConfigurationBtn = styled.button`\n  background-image: url(${configurationButton});\n  background-size: contain;\n  background-repeat: no-repeat;\n  border: none;\n  background-color: transparent;\n  width: 55rem;\n  height: 8rem;\n\n  font-size: 2.5rem;\n  color: white;\n  font-family: \"Nunito\";\n  font-weight: bold;\n\n  transform: translateX(25%);\n\n  &:focus {\n    outline: none;\n    transform: scale(0.95) translateX(25%);\n  }\n\n  && img {\n    margin-left: 1rem;\n  }\n`;\n\nSetup.propTypes = {\n  uiStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`uiStore`)(observer(Setup));\n"]},"metadata":{},"sourceType":"module"}