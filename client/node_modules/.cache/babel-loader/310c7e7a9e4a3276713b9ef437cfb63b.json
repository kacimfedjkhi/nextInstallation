{"ast":null,"code":"import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(_theme, _text, _locationCreated, _locations, _answers, _uniqueId, pin, _id = uuid.v4()) {\n    this.setId = id => this.id = id;\n\n    this.setTheme = theme => this.theme = theme;\n\n    this.setText = text => this.text = text;\n\n    this.setLocationCreated = locationCreated => this.locationCreated = locationCreated;\n\n    this.setLocations = locations => this.locations = locations;\n\n    this.setAnswers = answers => this.answers = answers;\n\n    this.setUniqueId = uniqueId => this.uniqueId = uniqueId;\n\n    this.remove = () => {\n      this.remove(this);\n    };\n\n    this.updateFromServer = values => {\n      this.setId(values._id);\n      this.setTheme(values.theme);\n      this.setText(values.text);\n      this.setLocationCreated(values.locationCreated);\n      this.setLocations(values.locations);\n      this.setAnswers(values.answers);\n      this.setUniqueId(values.uniqueId);\n    };\n\n    this.theme = _theme;\n    this.text = _text;\n    this.locationCreated = _locationCreated;\n    this.locations = _locations;\n    this.answers = _answers;\n    this.uniqueId = _uniqueId;\n  }\n\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locationCreated: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action\n});\nexport default Card;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/models/Card.js"],"names":["uuid","decorate","observable","action","Card","constructor","theme","text","locationCreated","locations","answers","uniqueId","pin","id","v4","setId","setTheme","setText","setLocationCreated","setLocations","setAnswers","setUniqueId","remove","updateFromServer","values","_id"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CACTC,MADS,EAETC,KAFS,EAGTC,gBAHS,EAITC,UAJS,EAKTC,QALS,EAMTC,SANS,EAOTC,GAPS,EAQTC,GAAE,GAAGb,IAAI,CAACc,EAAL,EARI,EAST;AAAA,SASFC,KATE,GASMF,EAAE,IAAK,KAAKA,EAAL,GAAUA,EATvB;;AAAA,SAUFG,QAVE,GAUSV,KAAK,IAAK,KAAKA,KAAL,GAAaA,KAVhC;;AAAA,SAWFW,OAXE,GAWQV,IAAI,IAAK,KAAKA,IAAL,GAAYA,IAX7B;;AAAA,SAYFW,kBAZE,GAYmBV,eAAe,IACjC,KAAKA,eAAL,GAAuBA,eAbxB;;AAAA,SAcFW,YAdE,GAcaV,SAAS,IAAK,KAAKA,SAAL,GAAiBA,SAd5C;;AAAA,SAeFW,UAfE,GAeWV,OAAO,IAAK,KAAKA,OAAL,GAAeA,OAftC;;AAAA,SAgBFW,WAhBE,GAgBYV,QAAQ,IAAK,KAAKA,QAAL,GAAgBA,QAhBzC;;AAAA,SAkBFW,MAlBE,GAkBO,MAAM;AACb,WAAKA,MAAL,CAAY,IAAZ;AACD,KApBC;;AAAA,SAsBFC,gBAtBE,GAsBiBC,MAAM,IAAI;AAC3B,WAAKT,KAAL,CAAWS,MAAM,CAACC,GAAlB;AACA,WAAKT,QAAL,CAAcQ,MAAM,CAAClB,KAArB;AACA,WAAKW,OAAL,CAAaO,MAAM,CAACjB,IAApB;AACA,WAAKW,kBAAL,CAAwBM,MAAM,CAAChB,eAA/B;AACA,WAAKW,YAAL,CAAkBK,MAAM,CAACf,SAAzB;AACA,WAAKW,UAAL,CAAgBI,MAAM,CAACd,OAAvB;AACA,WAAKW,WAAL,CAAiBG,MAAM,CAACb,QAAxB;AACD,KA9BC;;AACA,SAAKL,KAAL,GAAaA,MAAb;AACA,SAAKC,IAAL,GAAYA,KAAZ;AACA,SAAKC,eAAL,GAAuBA,gBAAvB;AACA,SAAKC,SAAL,GAAiBA,UAAjB;AACA,SAAKC,OAAL,GAAeA,QAAf;AACA,SAAKC,QAAL,GAAgBA,SAAhB;AACD;;AAjBQ;;AA2CXV,QAAQ,CAACG,IAAD,EAAO;AACbS,EAAAA,EAAE,EAAEX,UADS;AAEbI,EAAAA,KAAK,EAAEJ,UAFM;AAGbK,EAAAA,IAAI,EAAEL,UAHO;AAIbM,EAAAA,eAAe,EAAEN,UAJJ;AAKbO,EAAAA,SAAS,EAAEP,UALE;AAMbQ,EAAAA,OAAO,EAAER,UANI;AAObS,EAAAA,QAAQ,EAAET,UAPG;AAQba,EAAAA,KAAK,EAAEZ,MARM;AASba,EAAAA,QAAQ,EAAEb,MATG;AAUbc,EAAAA,OAAO,EAAEd,MAVI;AAWbgB,EAAAA,YAAY,EAAEhB,MAXD;AAYbiB,EAAAA,UAAU,EAAEjB,MAZC;AAabkB,EAAAA,WAAW,EAAElB;AAbA,CAAP,CAAR;AAgBA,eAAeC,IAAf","sourcesContent":["import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(\n    theme,\n    text,\n    locationCreated,\n    locations,\n    answers,\n    uniqueId,\n    pin,\n    id = uuid.v4()\n  ) {\n    this.theme = theme;\n    this.text = text;\n    this.locationCreated = locationCreated;\n    this.locations = locations;\n    this.answers = answers;\n    this.uniqueId = uniqueId;\n  }\n\n  setId = id => (this.id = id);\n  setTheme = theme => (this.theme = theme);\n  setText = text => (this.text = text);\n  setLocationCreated = locationCreated =>\n    (this.locationCreated = locationCreated);\n  setLocations = locations => (this.locations = locations);\n  setAnswers = answers => (this.answers = answers);\n  setUniqueId = uniqueId => (this.uniqueId = uniqueId);\n\n  remove = () => {\n    this.remove(this);\n  };\n\n  updateFromServer = values => {\n    this.setId(values._id);\n    this.setTheme(values.theme);\n    this.setText(values.text);\n    this.setLocationCreated(values.locationCreated);\n    this.setLocations(values.locations);\n    this.setAnswers(values.answers);\n    this.setUniqueId(values.uniqueId);\n  };\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locationCreated: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action\n});\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}