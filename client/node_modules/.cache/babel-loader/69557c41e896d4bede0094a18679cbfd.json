{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\n\nconst SetupUserLanguage = ({\n  uiStore\n}) => {\n  if (uiStore.adminLanguage === \"nl\") {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Kies de standaardtaal van de gebruiker\"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"nl\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"NL\"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"fr\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"FR\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Deze taal kan op ieder moment aangepast worden door de gebruiker tijdens het gebruik van de installatie.\"));\n  } else {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Choisissez la langue par d\\xE9faut de l'utilisateur\"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"nl\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"NL\"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"fr\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"FR\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Cette langue peut \\xEAtre modifi\\xE9e \\xE0 tout moment par l'utilisateur pendant l'utilisation de l'installation.\"));\n  }\n};\n\nconst Title = styled.h2`\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #8089ce;\n  font-size: 3rem;\n  padding: 2rem 0;\n`;\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx"],"names":["React","inject","observer","Button","styled","SetupUserLanguage","uiStore","adminLanguage","userLanguage","setUserLanguage","Title","h2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACzC,MAAIA,OAAO,CAACC,aAAR,KAA0B,IAA9B,EAAoC;AAClC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAED,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAQE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEH,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAdF,CADF;AAqBD,GAtBD,MAsBO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,EAEE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEH,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAQE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEH,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAdF,CADF;AAqBD;AACF,CA9CD;;AAgDA,MAAMC,KAAK,GAAGN,MAAM,CAACO,EAAG;;;;;;CAAxB;AAQA,eAAeV,MAAM,CAAC,SAAD,CAAN,CAAkBC,QAAQ,CAACG,iBAAD,CAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport styled from \"styled-components\";\n\nconst SetupUserLanguage = ({ uiStore }) => {\n  if (uiStore.adminLanguage === \"nl\") {\n    return (\n      <section>\n        <h2>Kies de standaardtaal van de gebruiker</h2>\n        <Button\n          variant={uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"nl\")}\n        >\n          NL\n        </Button>\n        <Button\n          variant={uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"fr\")}\n        >\n          FR\n        </Button>\n        <p>\n          Deze taal kan op ieder moment aangepast worden door de gebruiker\n          tijdens het gebruik van de installatie.\n        </p>\n      </section>\n    );\n  } else {\n    return (\n      <section>\n        <Title>Choisissez la langue par défaut de l'utilisateur</Title>\n        <Button\n          variant={uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"nl\")}\n        >\n          NL\n        </Button>\n        <Button\n          variant={uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"fr\")}\n        >\n          FR\n        </Button>\n        <p>\n          Cette langue peut être modifiée à tout moment par l'utilisateur\n          pendant l'utilisation de l'installation.\n        </p>\n      </section>\n    );\n  }\n};\n\nconst Title = styled.h2`\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #8089ce;\n  font-size: 3rem;\n  padding: 2rem 0;\n`;\n\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));\n"]},"metadata":{},"sourceType":"module"}