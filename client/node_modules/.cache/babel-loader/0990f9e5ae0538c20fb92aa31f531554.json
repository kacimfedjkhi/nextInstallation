{"ast":null,"code":"import { decorate, observable, action } from \"mobx\";\nimport Api from \"../api/index\";\nimport Card from \"../models/Card\"; //import { decorate, observable, action } from \"mobx\";\n\nclass WriteStore {\n  constructor(rootStore) {\n    this.activeStep = 0;\n    this.image = 0;\n    this.theme = \"\";\n    this.message = \"\";\n    this.uniqueId = \"\";\n    this.sealed = false;\n    this.inputMethod = \"templates\";\n    this.cardFlipped = true;\n\n    this.setActiveStep = amount => {\n      switch (amount) {\n        case \"increase\":\n          return this.activeStep = this.activeStep + 1;\n\n        case \"decrease\":\n          return this.activeStep = this.activeStep - 1;\n\n        case \"reset\":\n          return this.activeStep = 0;\n\n        default:\n          return \"Unknown stepIndex\";\n      }\n    };\n\n    this.getStepTitle = stepIndex => {\n      switch (stepIndex) {\n        case 0:\n          return \"Welk thema spreekt je het meest aan tijdens het ontdekken van een nieuwe regio, cultuur of land?\";\n\n        case 1:\n          return \"Wat zou je graag vertellen of vragen?\";\n\n        case 2:\n          return \"\";\n\n        case 3:\n          return \"Klaar! Uw kaartje wordt verstuurd\";\n\n        default:\n          return \"Unknown stepIndex\";\n      }\n    };\n\n    this.handleChangeInput = selectedInput => {\n      this.inputMethod = selectedInput;\n    };\n\n    this.handleFlipCard = () => {\n      if (!this.cardFlipped) {\n        this.cardFlipped = true;\n      } else {\n        this.cardFlipped = false;\n      }\n    };\n\n    this.sendCard = async () => {\n      console.log(this.message);\n      const card = new Card(this.theme, this.message, this.image, this.rootStore.uiStore.selectedLocation, [], [], this.uniqueId);\n      this.api.createCard(card);\n      this.socket.emit(`sendCard`, card);\n      this.emptyValues();\n    };\n\n    this.emptyValues = () => {\n      this.activeStep = 0;\n      this.theme = \"\";\n      this.message = \"\";\n      this.uniqueId = \"\";\n      this.cardFlipped = true;\n    };\n\n    this.handleClickTheme = e => {\n      this.theme = e;\n    };\n\n    this.getImg = theme => {\n      let img;\n      console.log(this.theme);\n\n      switch (this.rootStore.uiStore.userLanguage) {\n        case \"nl\":\n          this.theme === theme.en ? img = theme.nl[1] : img = theme.nl[0];\n          break;\n\n        case \"fr\":\n          this.theme === theme.en ? img = theme.fr[1] : img = theme.fr[0];\n          break;\n\n        default:\n          img = \"\";\n      }\n\n      return img;\n    };\n\n    this.handleChangeImage = () => {\n      if (this.image < 4) {\n        this.image++;\n      } else {\n        this.image = 0;\n      }\n    };\n\n    this.rootStore = rootStore;\n    this.api = new Api(`cards`);\n    this.socket = rootStore.uiStore.socket;\n  }\n\n}\n\ndecorate(WriteStore, {\n  activeStep: observable,\n  theme: observable,\n  message: observable,\n  image: observable,\n  inputMethod: observable,\n  cardFlipped: observable,\n  setActiveStep: action,\n  handleChangeInput: action,\n  handleFlipCard: action,\n  sendCard: action,\n  emptyValues: action,\n  handleClickTheme: action,\n  getImg: action,\n  handleChangeImage: action\n});\nexport default WriteStore;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/store/WriteStore.js"],"names":["decorate","observable","action","Api","Card","WriteStore","constructor","rootStore","activeStep","image","theme","message","uniqueId","sealed","inputMethod","cardFlipped","setActiveStep","amount","getStepTitle","stepIndex","handleChangeInput","selectedInput","handleFlipCard","sendCard","console","log","card","uiStore","selectedLocation","api","createCard","socket","emit","emptyValues","handleClickTheme","e","getImg","img","userLanguage","en","nl","fr","handleChangeImage"],"mappings":"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","sourcesContent":["import { decorate, observable, action } from \"mobx\";\nimport Api from \"../api/index\";\nimport Card from \"../models/Card\";\n\n//import { decorate, observable, action } from \"mobx\";\n\nclass WriteStore {\n  activeStep = 0;\n  image = 0;\n  theme = \"\";\n  message = \"\";\n  uniqueId = \"\";\n  sealed = false;\n\n  inputMethod = \"templates\";\n\n  cardFlipped = true;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.api = new Api(`cards`);\n    this.socket = rootStore.uiStore.socket;\n  }\n\n  setActiveStep = amount => {\n    switch (amount) {\n      case \"increase\":\n        return (this.activeStep = this.activeStep + 1);\n      case \"decrease\":\n        return (this.activeStep = this.activeStep - 1);\n      case \"reset\":\n        return (this.activeStep = 0);\n      default:\n        return \"Unknown stepIndex\";\n    }\n  };\n\n  getStepTitle = stepIndex => {\n    switch (stepIndex) {\n      case 0:\n        return \"Welk thema spreekt je het meest aan tijdens het ontdekken van een nieuwe regio, cultuur of land?\";\n      case 1:\n        return \"Wat zou je graag vertellen of vragen?\";\n      case 2:\n        return \"\";\n      case 3:\n        return \"Klaar! Uw kaartje wordt verstuurd\";\n      default:\n        return \"Unknown stepIndex\";\n    }\n  };\n\n  handleChangeInput = selectedInput => {\n    this.inputMethod = selectedInput;\n  };\n\n  handleFlipCard = () => {\n    if (!this.cardFlipped) {\n      this.cardFlipped = true;\n    } else {\n      this.cardFlipped = false;\n    }\n  };\n\n  sendCard = async () => {\n    console.log(this.message);\n\n    const card = new Card(\n      this.theme,\n      this.message,\n      this.image,\n      this.rootStore.uiStore.selectedLocation,\n      [],\n      [],\n      this.uniqueId\n    );\n    this.api.createCard(card);\n\n    this.socket.emit(`sendCard`, card);\n\n    this.emptyValues();\n  };\n\n  emptyValues = () => {\n    this.activeStep = 0;\n    this.theme = \"\";\n    this.message = \"\";\n    this.uniqueId = \"\";\n    this.cardFlipped = true;\n  };\n\n  handleClickTheme = e => {\n    this.theme = e;\n  };\n\n  getImg = theme => {\n    let img;\n    console.log(this.theme);\n\n    switch (this.rootStore.uiStore.userLanguage) {\n      case \"nl\":\n        this.theme === theme.en ? (img = theme.nl[1]) : (img = theme.nl[0]);\n        break;\n      case \"fr\":\n        this.theme === theme.en ? (img = theme.fr[1]) : (img = theme.fr[0]);\n        break;\n      default:\n        img = \"\";\n    }\n\n    return img;\n  };\n\n  handleChangeImage = () => {\n    if (this.image < 4) {\n      this.image++;\n    } else {\n      this.image = 0;\n    }\n  };\n}\n\ndecorate(WriteStore, {\n  activeStep: observable,\n  theme: observable,\n  message: observable,\n  image: observable,\n  inputMethod: observable,\n  cardFlipped: observable,\n  setActiveStep: action,\n  handleChangeInput: action,\n  handleFlipCard: action,\n  sendCard: action,\n  emptyValues: action,\n  handleClickTheme: action,\n  getImg: action,\n  handleChangeImage: action\n});\n\nexport default WriteStore;\n"]},"metadata":{},"sourceType":"module"}