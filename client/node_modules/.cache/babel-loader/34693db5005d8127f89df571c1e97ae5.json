{"ast":null,"code":"import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(_theme, _text, image, _locationCreated, _locations, _answers, _uniqueId, pin, _id = uuid.v4()) {\n    this.setId = id => this.id = id;\n\n    this.setTheme = theme => this.theme = theme;\n\n    this.setText = text => this.text = text;\n\n    this.setLocationCreated = locationCreated => this.locationCreated = locationCreated;\n\n    this.setLocations = locations => this.locations = locations;\n\n    this.setAnswers = answers => this.answers = answers;\n\n    this.setUniqueId = uniqueId => this.uniqueId = uniqueId;\n\n    this.remove = () => {\n      this.remove(this);\n    };\n\n    this.updateFromServer = values => {\n      this.setId(values._id);\n      this.setTheme(values.theme);\n      this.setText(values.text);\n      this.setLocationCreated(values.locationCreated);\n      this.setLocations(values.locations);\n      this.setAnswers(values.answers);\n      this.setUniqueId(values.uniqueId);\n    };\n\n    this.theme = _theme;\n    this.text = _text;\n    this.image = image;\n    this.locationCreated = _locationCreated;\n    this.locations = _locations;\n    this.answers = _answers;\n    this.uniqueId = _uniqueId;\n  }\n\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locationCreated: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action\n});\nexport default Card;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/models/Card.js"],"names":["uuid","decorate","observable","action","Card","constructor","theme","text","image","locationCreated","locations","answers","uniqueId","pin","id","v4","setId","setTheme","setText","setLocationCreated","setLocations","setAnswers","setUniqueId","remove","updateFromServer","values","_id"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CACTC,MADS,EAETC,KAFS,EAGTC,KAHS,EAITC,gBAJS,EAKTC,UALS,EAMTC,QANS,EAOTC,SAPS,EAQTC,GARS,EASTC,GAAE,GAAGd,IAAI,CAACe,EAAL,EATI,EAUT;AAAA,SAUFC,KAVE,GAUMF,EAAE,IAAK,KAAKA,EAAL,GAAUA,EAVvB;;AAAA,SAWFG,QAXE,GAWSX,KAAK,IAAK,KAAKA,KAAL,GAAaA,KAXhC;;AAAA,SAYFY,OAZE,GAYQX,IAAI,IAAK,KAAKA,IAAL,GAAYA,IAZ7B;;AAAA,SAaFY,kBAbE,GAamBV,eAAe,IACjC,KAAKA,eAAL,GAAuBA,eAdxB;;AAAA,SAeFW,YAfE,GAeaV,SAAS,IAAK,KAAKA,SAAL,GAAiBA,SAf5C;;AAAA,SAgBFW,UAhBE,GAgBWV,OAAO,IAAK,KAAKA,OAAL,GAAeA,OAhBtC;;AAAA,SAiBFW,WAjBE,GAiBYV,QAAQ,IAAK,KAAKA,QAAL,GAAgBA,QAjBzC;;AAAA,SAmBFW,MAnBE,GAmBO,MAAM;AACb,WAAKA,MAAL,CAAY,IAAZ;AACD,KArBC;;AAAA,SAuBFC,gBAvBE,GAuBiBC,MAAM,IAAI;AAC3B,WAAKT,KAAL,CAAWS,MAAM,CAACC,GAAlB;AACA,WAAKT,QAAL,CAAcQ,MAAM,CAACnB,KAArB;AACA,WAAKY,OAAL,CAAaO,MAAM,CAAClB,IAApB;AACA,WAAKY,kBAAL,CAAwBM,MAAM,CAAChB,eAA/B;AACA,WAAKW,YAAL,CAAkBK,MAAM,CAACf,SAAzB;AACA,WAAKW,UAAL,CAAgBI,MAAM,CAACd,OAAvB;AACA,WAAKW,WAAL,CAAiBG,MAAM,CAACb,QAAxB;AACD,KA/BC;;AACA,SAAKN,KAAL,GAAaA,MAAb;AACA,SAAKC,IAAL,GAAYA,KAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,eAAL,GAAuBA,gBAAvB;AACA,SAAKC,SAAL,GAAiBA,UAAjB;AACA,SAAKC,OAAL,GAAeA,QAAf;AACA,SAAKC,QAAL,GAAgBA,SAAhB;AACD;;AAnBQ;;AA6CXX,QAAQ,CAACG,IAAD,EAAO;AACbU,EAAAA,EAAE,EAAEZ,UADS;AAEbI,EAAAA,KAAK,EAAEJ,UAFM;AAGbK,EAAAA,IAAI,EAAEL,UAHO;AAIbO,EAAAA,eAAe,EAAEP,UAJJ;AAKbQ,EAAAA,SAAS,EAAER,UALE;AAMbS,EAAAA,OAAO,EAAET,UANI;AAObU,EAAAA,QAAQ,EAAEV,UAPG;AAQbc,EAAAA,KAAK,EAAEb,MARM;AASbc,EAAAA,QAAQ,EAAEd,MATG;AAUbe,EAAAA,OAAO,EAAEf,MAVI;AAWbiB,EAAAA,YAAY,EAAEjB,MAXD;AAYbkB,EAAAA,UAAU,EAAElB,MAZC;AAabmB,EAAAA,WAAW,EAAEnB;AAbA,CAAP,CAAR;AAgBA,eAAeC,IAAf","sourcesContent":["import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(\n    theme,\n    text,\n    image,\n    locationCreated,\n    locations,\n    answers,\n    uniqueId,\n    pin,\n    id = uuid.v4()\n  ) {\n    this.theme = theme;\n    this.text = text;\n    this.image = image;\n    this.locationCreated = locationCreated;\n    this.locations = locations;\n    this.answers = answers;\n    this.uniqueId = uniqueId;\n  }\n\n  setId = id => (this.id = id);\n  setTheme = theme => (this.theme = theme);\n  setText = text => (this.text = text);\n  setLocationCreated = locationCreated =>\n    (this.locationCreated = locationCreated);\n  setLocations = locations => (this.locations = locations);\n  setAnswers = answers => (this.answers = answers);\n  setUniqueId = uniqueId => (this.uniqueId = uniqueId);\n\n  remove = () => {\n    this.remove(this);\n  };\n\n  updateFromServer = values => {\n    this.setId(values._id);\n    this.setTheme(values.theme);\n    this.setText(values.text);\n    this.setLocationCreated(values.locationCreated);\n    this.setLocations(values.locations);\n    this.setAnswers(values.answers);\n    this.setUniqueId(values.uniqueId);\n  };\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locationCreated: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action\n});\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}