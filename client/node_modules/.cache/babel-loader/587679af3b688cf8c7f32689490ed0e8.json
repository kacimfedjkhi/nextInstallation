{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/components/MessageInput.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Keyboard from \"./KeyboardInput\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport templateBg from \"../assets/img/templateBg.png\";\nimport templateBg_dark from \"../assets/img/templateBg_dark.png\";\nimport inputChoiceBg_dark from \"../assets/img/inputChoiceBg_dark.png\";\nimport inputChoiceBg_light from \"../assets/img/inputChoiceBg_light.png\";\n\nconst MessageInput = ({\n  writeStore,\n  uiStore\n}) => {\n  const handleClick = msg => {\n    writeStore.message = msg;\n  };\n\n  let input = writeStore.inputMethod;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(InputChoiceBtn, {\n    onClick: () => writeStore.handleChangeInput(\"templates\"),\n    img: writeStore.inputMethod === \"templates\" ? inputChoiceBg_dark : inputChoiceBg_light,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"sjablonen\"), React.createElement(InputChoiceBtn, {\n    onClick: () => writeStore.handleChangeInput(\"keyboard\"),\n    img: writeStore.inputMethod === \"keyboard\" ? inputChoiceBg_dark : inputChoiceBg_light,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"eigen boodschap\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), input === \"templates\" ? React.createElement(MessageList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, messages[writeStore.theme].map(message => React.createElement(TemplateMessage, {\n    key: message,\n    onClick: () => handleClick(message),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, message))) : React.createElement(KeyboardMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, uiStore.userLanguage === \"nl\" ? \"Start met typen en uw boodschap verschijnt direct op het postkaartje!\" : \"Commencez à taper et votre message apparaîtra directement sur la carte postale !\"), input === \"keyboard\" ? React.createElement(Keyboard, {\n    store: writeStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : null);\n};\n\nconst TemplateMessage = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${templateBg});\n  background-size: contain;\n  background-repeat: no-repeat;\n  height: 6.5rem;\n  margin-bottom: 1rem;\n\n  color: #8089ce;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  font-size: 2rem;\n\n  &:focus {\n    outline: none;\n    background-image: url(${templateBg_dark});\n    color: white;\n  }\n`;\nconst MessageList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst InputChoiceBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 30rem;\n  height: 6rem;\n\n  font-size: 2.5rem;\n  color: white;\n  font-weight: bold;\n\n  &:focus {\n    outline: none;\n  }\n`;\nconst KeyboardMessage = styled.p`\n  color: #8089ce;\n  font-size: 2rem;\n  font-weight: bold;\n  padding-top: 2rem;\n`;\nconst messages = {\n  news: [\"Waarmee is jouw streek voor het laatst in het nieuws gekomen?\", \"Welk evenement staat er als volgende op je kalender?\", \"Waarmee zou je graag in de krant komen?\"],\n  nature: [\"Wat is het mooiste natuurplekje in jouw streek?\", \"Overheersen parken of fabrieken in jouw streek?\", \"Zie je meer fietsers of wagens in het verkeer?\"],\n  technology: [\"Wat is jouw favoriete stukje technologie?\", \"Is jouw streek eerder ouderwets of modern en op welk vlak?\", \"Welke innovatieve ideeën worden er ondernomen in jouw streek?\"],\n  culinary: [\"Wat is een typisch streekgerecht?\", \"Welk restaurant zou je aan iedereen aanraden?\", \"Rond hoelaat is het gebruikelijk om te dineren volgens jou?\"],\n  tourism: [\"Wat is een typische streekambacht?\", \"Welke plek is het meest fotowaardig in jouw buurt?\", \"Welke winkels zou je aanraden voor een dagje shoppen?\"],\n  art: [\"Kent jouw streek een bekende kunstenaar?\", \"Kent jouw streek een bekende muzikant?\", \"Beoefen jij een vorm van kunst?\"]\n};\nexport default inject(`writeStore`, `uiStore`)(observer(MessageInput));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/components/MessageInput.jsx"],"names":["React","inject","observer","Keyboard","styled","Button","templateBg","templateBg_dark","inputChoiceBg_dark","inputChoiceBg_light","MessageInput","writeStore","uiStore","handleClick","msg","message","input","inputMethod","handleChangeInput","messages","theme","map","userLanguage","TemplateMessage","button","MessageList","div","InputChoiceBtn","props","img","KeyboardMessage","p","news","nature","technology","culinary","tourism","art"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Keyboard from \"./KeyboardInput\";\n\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nimport templateBg from \"../assets/img/templateBg.png\";\nimport templateBg_dark from \"../assets/img/templateBg_dark.png\";\n\nimport inputChoiceBg_dark from \"../assets/img/inputChoiceBg_dark.png\";\nimport inputChoiceBg_light from \"../assets/img/inputChoiceBg_light.png\";\n\nconst MessageInput = ({ writeStore, uiStore }) => {\n  const handleClick = msg => {\n    writeStore.message = msg;\n  };\n\n  let input = writeStore.inputMethod;\n\n  return (\n    <>\n      <div>\n        <InputChoiceBtn\n          onClick={() => writeStore.handleChangeInput(\"templates\")}\n          img={\n            writeStore.inputMethod === \"templates\"\n              ? inputChoiceBg_dark\n              : inputChoiceBg_light\n          }\n        >\n          sjablonen\n        </InputChoiceBtn>\n        <InputChoiceBtn\n          onClick={() => writeStore.handleChangeInput(\"keyboard\")}\n          img={\n            writeStore.inputMethod === \"keyboard\"\n              ? inputChoiceBg_dark\n              : inputChoiceBg_light\n          }\n        >\n          eigen boodschap\n        </InputChoiceBtn>\n      </div>\n\n      <br />\n      {input === \"templates\" ? (\n        <MessageList>\n          {messages[writeStore.theme].map(message => (\n            <TemplateMessage key={message} onClick={() => handleClick(message)}>\n              {message}\n            </TemplateMessage>\n          ))}\n        </MessageList>\n      ) : (\n        <KeyboardMessage>\n          {uiStore.userLanguage === \"nl\"\n            ? \"Start met typen en uw boodschap verschijnt direct op het postkaartje!\"\n            : \"Commencez à taper et votre message apparaîtra directement sur la carte postale !\"}\n        </KeyboardMessage>\n      )}\n      {input === \"keyboard\" ? <Keyboard store={writeStore} /> : null}\n    </>\n  );\n};\n\nconst TemplateMessage = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${templateBg});\n  background-size: contain;\n  background-repeat: no-repeat;\n  height: 6.5rem;\n  margin-bottom: 1rem;\n\n  color: #8089ce;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  font-size: 2rem;\n\n  &:focus {\n    outline: none;\n    background-image: url(${templateBg_dark});\n    color: white;\n  }\n`;\n\nconst MessageList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputChoiceBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 30rem;\n  height: 6rem;\n\n  font-size: 2.5rem;\n  color: white;\n  font-weight: bold;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst KeyboardMessage = styled.p`\n  color: #8089ce;\n  font-size: 2rem;\n  font-weight: bold;\n  padding-top: 2rem;\n`;\n\nconst messages = {\n  news: [\n    \"Waarmee is jouw streek voor het laatst in het nieuws gekomen?\",\n    \"Welk evenement staat er als volgende op je kalender?\",\n    \"Waarmee zou je graag in de krant komen?\"\n  ],\n  nature: [\n    \"Wat is het mooiste natuurplekje in jouw streek?\",\n    \"Overheersen parken of fabrieken in jouw streek?\",\n    \"Zie je meer fietsers of wagens in het verkeer?\"\n  ],\n  technology: [\n    \"Wat is jouw favoriete stukje technologie?\",\n    \"Is jouw streek eerder ouderwets of modern en op welk vlak?\",\n    \"Welke innovatieve ideeën worden er ondernomen in jouw streek?\"\n  ],\n  culinary: [\n    \"Wat is een typisch streekgerecht?\",\n    \"Welk restaurant zou je aan iedereen aanraden?\",\n    \"Rond hoelaat is het gebruikelijk om te dineren volgens jou?\"\n  ],\n  tourism: [\n    \"Wat is een typische streekambacht?\",\n    \"Welke plek is het meest fotowaardig in jouw buurt?\",\n    \"Welke winkels zou je aanraden voor een dagje shoppen?\"\n  ],\n  art: [\n    \"Kent jouw streek een bekende kunstenaar?\",\n    \"Kent jouw streek een bekende muzikant?\",\n    \"Beoefen jij een vorm van kunst?\"\n  ]\n};\n\nexport default inject(`writeStore`, `uiStore`)(observer(MessageInput));\n"]},"metadata":{},"sourceType":"module"}