{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/components/Card.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReactCardFlip from \"react-card-flip\";\nimport styled from \"styled-components\";\nimport cardFront from \"../assets/img/cardFront.png\";\nimport cardBack from \"../assets/img/cardBack_kortrijk.png\";\nimport flip from \"../assets/img/flip.png\";\n\nconst getOverlay = theme => {};\n\nconst Card = props => {\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(FlipBtn, {\n    onClick: props.writeStore.handleFlipCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: \"60\",\n    src: flip,\n    alt: \"Button to flip card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(ReactCardFlip, {\n    isFlipped: props.isFlipped,\n    flipDirection: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Front, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.theme ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.theme) : null, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.message ? React.createElement(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.message) : null, React.createElement(AnswerList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.answers ? props.answers.map(answer => React.createElement(\"li\", {\n    key: answer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, answer)) : null, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.openStore ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.openStore.message) : null))), props.locationCreated ? React.createElement(LocationCreated, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.locationCreated) : null), React.createElement(Back, {\n    img: props.image,\n    overlay: getOverlay(props.theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n};\n\nconst Front = styled.div`\n  background-image: url(${cardFront});\n  background-size: contain;\n  width: 100rem;\n  height: 66rem;\n  transform: rotate(-5deg);\n  position: relative;\n`;\nconst Back = styled.div`\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 100rem;\n  height: 66rem;\n  transform: rotate(-5deg);\n  position: relative;\n`;\nconst Message = styled.p`\n  font-family: \"Aracne\";\n  font-size: 4.5rem;\n  max-width: 35rem;\n  transform: rotate(-6deg);\n  font-style: italic;\n  color: #8089ce;\n  font-weight: bolder;\n  margin-bottom: 3rem;\n`;\nconst LocationCreated = styled.p`\n  position: absolute;\n  right: 20rem;\n  bottom: 24rem;\n\n  font-size: 3rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  color: #6ec8cd;\n`;\nconst AnswerList = styled.ul`\n  width: 40rem;\n  height: 30rem;\n\n  & li {\n    font-family: \"Aracne\";\n    color: #4da0a4;\n    font-size: 3.5rem;\n    padding: 1rem 0;\n    font-weight: bold;\n    font-style: italic;\n    transform: rotate(-5deg);\n    max-width: 39rem;\n  }\n`;\nconst FlipBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 6rem;\n  height: 6rem;\n  z-index: 999;\n  outline: none;\n\n  position: relative;\n  top: 70rem;\n\n  &:focus {\n    transform: scale(0.95);\n  }\n`;\nconst CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 45rem;\n  height: 50rem;\n  padding: 6rem 0 0 5rem;\n`;\nexport default inject(`writeStore`)(observer(Card));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/client/src/components/Card.jsx"],"names":["React","inject","observer","makeStyles","ReactCardFlip","styled","cardFront","cardBack","flip","getOverlay","theme","Card","props","classes","useStyles","writeStore","handleFlipCard","isFlipped","message","answers","map","answer","openStore","locationCreated","image","Front","div","Back","img","Message","p","LocationCreated","AnswerList","ul","FlipBtn","button","CardContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ReactCardFlip from \"react-card-flip\";\n\nimport styled from \"styled-components\";\nimport cardFront from \"../assets/img/cardFront.png\";\nimport cardBack from \"../assets/img/cardBack_kortrijk.png\";\nimport flip from \"../assets/img/flip.png\";\n\nconst getOverlay = theme => {};\n\nconst Card = props => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <FlipBtn onClick={props.writeStore.handleFlipCard}>\n        <img width=\"60\" src={flip} alt=\"Button to flip card\" />\n      </FlipBtn>\n\n      <ReactCardFlip isFlipped={props.isFlipped} flipDirection=\"vertical\">\n        <Front>\n          {props.theme ? <p>{props.theme}</p> : null}\n          <CardContent>\n            {props.message ? <Message>{props.message}</Message> : null}\n            <AnswerList>\n              {props.answers\n                ? props.answers.map(answer => <li key={answer}>{answer}</li>)\n                : null}\n              <li>\n                {props.openStore ? <p>{props.openStore.message}</p> : null}\n              </li>\n            </AnswerList>\n          </CardContent>\n          {props.locationCreated ? (\n            <LocationCreated>{props.locationCreated}</LocationCreated>\n          ) : null}\n        </Front>\n        <Back img={props.image} overlay={getOverlay(props.theme)}></Back>\n      </ReactCardFlip>\n    </>\n  );\n};\n\nconst Front = styled.div`\n  background-image: url(${cardFront});\n  background-size: contain;\n  width: 100rem;\n  height: 66rem;\n  transform: rotate(-5deg);\n  position: relative;\n`;\n\nconst Back = styled.div`\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 100rem;\n  height: 66rem;\n  transform: rotate(-5deg);\n  position: relative;\n`;\n\nconst Message = styled.p`\n  font-family: \"Aracne\";\n  font-size: 4.5rem;\n  max-width: 35rem;\n  transform: rotate(-6deg);\n  font-style: italic;\n  color: #8089ce;\n  font-weight: bolder;\n  margin-bottom: 3rem;\n`;\n\nconst LocationCreated = styled.p`\n  position: absolute;\n  right: 20rem;\n  bottom: 24rem;\n\n  font-size: 3rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  color: #6ec8cd;\n`;\n\nconst AnswerList = styled.ul`\n  width: 40rem;\n  height: 30rem;\n\n  & li {\n    font-family: \"Aracne\";\n    color: #4da0a4;\n    font-size: 3.5rem;\n    padding: 1rem 0;\n    font-weight: bold;\n    font-style: italic;\n    transform: rotate(-5deg);\n    max-width: 39rem;\n  }\n`;\n\nconst FlipBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 6rem;\n  height: 6rem;\n  z-index: 999;\n  outline: none;\n\n  position: relative;\n  top: 70rem;\n\n  &:focus {\n    transform: scale(0.95);\n  }\n`;\n\nconst CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 45rem;\n  height: 50rem;\n  padding: 6rem 0 0 5rem;\n`;\n\nexport default inject(`writeStore`)(observer(Card));\n"]},"metadata":{},"sourceType":"module"}