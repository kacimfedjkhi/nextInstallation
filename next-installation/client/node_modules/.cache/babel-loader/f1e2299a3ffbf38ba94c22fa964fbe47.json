{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport UIStore from \"../store/UIStore\";\nimport styled from \"styled-components\";\nimport actualiteit from \"../assets/img/themes/actualiteit.png\";\nimport actualite from \"../assets/img/themes/actualite.png\";\nimport actualiteitSelected from \"../assets/img/themes/actualiteit_selected.png\";\nimport actualiteSelected from \"../assets/img/themes/actualite_selected.png\";\n\nconst ThemesList = ({\n  writeStore,\n  uiStore\n}) => {\n  const handleClickTheme = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [{\n    nl: kunst,\n    fr: art,\n    en: \"art\"\n  }, {\n    nl: culinair,\n    fr: culinaire,\n    en: \"culinary\"\n  }, {\n    nl: actualiteit,\n    fr: actualite,\n    en: \"news\"\n  }, {\n    nl: technologie,\n    fr: technologie,\n    en: \"technology\"\n  }, {\n    nl: natuur,\n    fr: nature,\n    en: \"nature\"\n  }, {\n    nl: toerisme,\n    fr: tourisme,\n    en: \"tourism\"\n  }];\n  return React.createElement(React.Fragment, null, themes.map(theme => React.createElement(ThemeButton, {\n    img: uiStore.userLanguage === \"nl\" ? theme.nl : theme.fr,\n    key: theme,\n    onClick: () => handleClickTheme(theme.en),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, uiStore.userLanguage === \"nl\" ? theme.nl : theme.fr))));\n};\n\nconst ThemeButton = styled.button`\n  background-image: url(${props => props.img});\n  background-color: transparent;\n  border: none;\n  width: 15rem;\n  height: 10rem;\n`;\nexport default inject(`writeStore`, `uiStore`)(observer(ThemesList));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx"],"names":["React","inject","observer","UIStore","styled","actualiteit","actualite","actualiteitSelected","actualiteSelected","ThemesList","writeStore","uiStore","handleClickTheme","e","theme","themes","nl","kunst","fr","art","en","culinair","culinaire","technologie","natuur","nature","toerisme","tourisme","map","userLanguage","ThemeButton","button","props","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAC9C,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5BH,IAAAA,UAAU,CAACI,KAAX,GAAmBD,CAAnB;AACD,GAFD;;AAIA,QAAME,MAAM,GAAG,CACb;AACEC,IAAAA,EAAE,EAAEC,KADN;AAEEC,IAAAA,EAAE,EAAEC,GAFN;AAGEC,IAAAA,EAAE,EAAE;AAHN,GADa,EAMb;AACEJ,IAAAA,EAAE,EAAEK,QADN;AAEEH,IAAAA,EAAE,EAAEI,SAFN;AAGEF,IAAAA,EAAE,EAAE;AAHN,GANa,EAWb;AACEJ,IAAAA,EAAE,EAAEX,WADN;AAEEa,IAAAA,EAAE,EAAEZ,SAFN;AAGEc,IAAAA,EAAE,EAAE;AAHN,GAXa,EAgBb;AACEJ,IAAAA,EAAE,EAAEO,WADN;AAEEL,IAAAA,EAAE,EAAEK,WAFN;AAGEH,IAAAA,EAAE,EAAE;AAHN,GAhBa,EAqBb;AACEJ,IAAAA,EAAE,EAAEQ,MADN;AAEEN,IAAAA,EAAE,EAAEO,MAFN;AAGEL,IAAAA,EAAE,EAAE;AAHN,GArBa,EA0Bb;AACEJ,IAAAA,EAAE,EAAEU,QADN;AAEER,IAAAA,EAAE,EAAES,QAFN;AAGEP,IAAAA,EAAE,EAAE;AAHN,GA1Ba,CAAf;AAiCA,SACE,0CACGL,MAAM,CAACa,GAAP,CAAWd,KAAK,IACf,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEH,OAAO,CAACkB,YAAR,KAAyB,IAAzB,GAAgCf,KAAK,CAACE,EAAtC,GAA2CF,KAAK,CAACI,EADxD;AAEE,IAAA,GAAG,EAAEJ,KAFP;AAGE,IAAA,OAAO,EAAE,MAAMF,gBAAgB,CAACE,KAAK,CAACM,EAAP,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,OAAO,CAACkB,YAAR,KAAyB,IAAzB,GAAgCf,KAAK,CAACE,EAAtC,GAA2CF,KAAK,CAACI,EAArD,CALF,CADD,CADH,CADF;AAaD,CAnDD;;AAqDA,MAAMY,WAAW,GAAG1B,MAAM,CAAC2B,MAAO;0BACRC,KAAK,IAAIA,KAAK,CAACC,GAAI;;;;;CAD7C;AAQA,eAAehC,MAAM,CAAE,YAAF,EAAgB,SAAhB,CAAN,CAAgCC,QAAQ,CAACO,UAAD,CAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport UIStore from \"../store/UIStore\";\nimport styled from \"styled-components\";\n\nimport actualiteit from \"../assets/img/themes/actualiteit.png\";\nimport actualite from \"../assets/img/themes/actualite.png\";\nimport actualiteitSelected from \"../assets/img/themes/actualiteit_selected.png\";\nimport actualiteSelected from \"../assets/img/themes/actualite_selected.png\";\n\nconst ThemesList = ({ writeStore, uiStore }) => {\n  const handleClickTheme = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [\n    {\n      nl: kunst,\n      fr: art,\n      en: \"art\"\n    },\n    {\n      nl: culinair,\n      fr: culinaire,\n      en: \"culinary\"\n    },\n    {\n      nl: actualiteit,\n      fr: actualite,\n      en: \"news\"\n    },\n    {\n      nl: technologie,\n      fr: technologie,\n      en: \"technology\"\n    },\n    {\n      nl: natuur,\n      fr: nature,\n      en: \"nature\"\n    },\n    {\n      nl: toerisme,\n      fr: tourisme,\n      en: \"tourism\"\n    }\n  ];\n\n  return (\n    <>\n      {themes.map(theme => (\n        <ThemeButton\n          img={uiStore.userLanguage === \"nl\" ? theme.nl : theme.fr}\n          key={theme}\n          onClick={() => handleClickTheme(theme.en)}\n        >\n          <p>{uiStore.userLanguage === \"nl\" ? theme.nl : theme.fr}</p>\n        </ThemeButton>\n      ))}\n    </>\n  );\n};\n\nconst ThemeButton = styled.button`\n  background-image: url(${props => props.img});\n  background-color: transparent;\n  border: none;\n  width: 15rem;\n  height: 10rem;\n`;\n\nexport default inject(`writeStore`, `uiStore`)(observer(ThemesList));\n"]},"metadata":{},"sourceType":"module"}