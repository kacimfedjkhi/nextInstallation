{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx\";\nimport React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport Card from \"../components/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport Keyboard from \"../components/KeyboardInput\";\nimport styled from \"styled-components\";\nimport backgroundImage from \"../assets/img/onboardingBg.jpg\";\nimport envelope from \"../assets/img/openEnvelope.png\";\n\nconst Answer = ({\n  openStore,\n  writeStore\n}) => {\n  const card = openStore.showCard();\n\n  const handleClickAnswer = () => {\n    console.log(\"kakwofd\");\n    openStore.answer = true;\n  };\n\n  const handleAnswerCard = () => {\n    console.log(\"answer\");\n    openStore.answerCard(card.id);\n  };\n\n  return React.createElement(StyledPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Dit is jou gekozen kaartje binnen het thema \\\"\", card.theme, \"\\\"!\"), React.createElement(Card, {\n    isFlipped: writeStore.cardFlipped,\n    theme: card.theme,\n    message: card.text,\n    answers: card.answers,\n    locations: card.locations,\n    writeStore: writeStore,\n    openStore: openStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), !openStore.answer ? React.createElement(React.Fragment, null, React.createElement(Link, {\n    to: ROUTES.open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Dit kaartje terug gooien\")), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleClickAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Dit kaartje beantwoorden\")) : null, React.createElement(Button, {\n    onClick: handleAnswerCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Klaar\"), openStore.answer ? React.createElement(Keyboard, {\n    store: openStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : null);\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 0;\n\n  &:after {\n    content: \"\";\n    display: block;\n    width: 80rem;\n    height: 70rem;\n    background-image: url(${envelope});\n    background-size: contain;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n  }\n`;\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\nexport default inject(`openStore`, `writeStore`)(observer(Answer));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx"],"names":["React","inject","observer","PropTypes","Card","Button","Link","ROUTES","Keyboard","styled","backgroundImage","envelope","Answer","openStore","writeStore","card","showCard","handleClickAnswer","console","log","answer","handleAnswerCard","answerCard","id","theme","cardFlipped","text","answers","locations","open","StyledPage","section","propTypes","observableObject","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,YAA5C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AAC5C,QAAMC,IAAI,GAAGF,SAAS,CAACG,QAAV,EAAb;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAN,IAAAA,SAAS,CAACO,MAAV,GAAmB,IAAnB;AACD,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAN,IAAAA,SAAS,CAACS,UAAV,CAAqBP,IAAI,CAACQ,EAA1B;AACD,GAHD;;AAKA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAkDR,IAAI,CAACS,KAAvD,QADF,EAEE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEV,UAAU,CAACW,WADxB;AAEE,IAAA,KAAK,EAAEV,IAAI,CAACS,KAFd;AAGE,IAAA,OAAO,EAAET,IAAI,CAACW,IAHhB;AAIE,IAAA,OAAO,EAAEX,IAAI,CAACY,OAJhB;AAKE,IAAA,SAAS,EAAEZ,IAAI,CAACa,SALlB;AAME,IAAA,UAAU,EAAEd,UANd;AAOE,IAAA,SAAS,EAAED,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWG,CAACA,SAAS,CAACO,MAAX,GACC,0CACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEb,MAAM,CAACsB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEZ,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJF,CADD,GASG,IApBN,EAsBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF,EAuBGR,SAAS,CAACO,MAAV,GAAmB,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAoD,IAvBvD,CADF;AA2BD,CAzCD;;AA2CA,MAAMiB,UAAU,GAAGrB,MAAM,CAACsB,OAAQ;;;0BAGRrB,eAAgB;;;;;;;;;;;;;4BAadC,QAAS;;;;;;CAhBrC;AAwBAC,MAAM,CAACoB,SAAP,GAAmB;AACjBnB,EAAAA,SAAS,EAAEV,SAAS,CAAC8B,gBAAV,CAA2BC;AADrB,CAAnB;AAIA,eAAejC,MAAM,CAAE,WAAF,EAAe,YAAf,CAAN,CAAkCC,QAAQ,CAACU,MAAD,CAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport Card from \"../components/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport Keyboard from \"../components/KeyboardInput\";\n\nimport styled from \"styled-components\";\nimport backgroundImage from \"../assets/img/onboardingBg.jpg\";\nimport envelope from \"../assets/img/openEnvelope.png\";\n\nconst Answer = ({ openStore, writeStore }) => {\n  const card = openStore.showCard();\n\n  const handleClickAnswer = () => {\n    console.log(\"kakwofd\");\n\n    openStore.answer = true;\n  };\n\n  const handleAnswerCard = () => {\n    console.log(\"answer\");\n    openStore.answerCard(card.id);\n  };\n\n  return (\n    <StyledPage>\n      <h1>Dit is jou gekozen kaartje binnen het thema \"{card.theme}\"!</h1>\n      <Card\n        isFlipped={writeStore.cardFlipped}\n        theme={card.theme}\n        message={card.text}\n        answers={card.answers}\n        locations={card.locations}\n        writeStore={writeStore}\n        openStore={openStore}\n      />\n      {!openStore.answer ? (\n        <>\n          <Link to={ROUTES.open}>\n            <Button>Dit kaartje terug gooien</Button>\n          </Link>\n          <Button variant=\"contained\" onClick={handleClickAnswer}>\n            Dit kaartje beantwoorden\n          </Button>\n        </>\n      ) : null}\n\n      <Button onClick={handleAnswerCard}>Klaar</Button>\n      {openStore.answer ? <Keyboard store={openStore} /> : null}\n    </StyledPage>\n  );\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 0;\n\n  &:after {\n    content: \"\";\n    display: block;\n    width: 80rem;\n    height: 70rem;\n    background-image: url(${envelope});\n    background-size: contain;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n  }\n`;\n\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`openStore`, `writeStore`)(observer(Answer));\n"]},"metadata":{},"sourceType":"module"}