{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst SetupUserLanguage = ({\n  uiStore\n}) => {\n  if (uiStore.adminLanguage === \"nl\") {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Kies de taal voor de gebruiker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Deze kan op elk moment nog gewijzigd worden\"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"nl\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"NL\"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"fr\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"FR\"));\n  } else {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Choisissez la langue pour l'utilisateur\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Cela peut \\xEAtre modifi\\xE9 \\xE0 tout moment \"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"nl\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"NL\"), React.createElement(Button, {\n      variant: uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\",\n      onClick: () => uiStore.setUserLanguage(\"fr\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"FR\"));\n  }\n};\n\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx"],"names":["React","inject","observer","Button","SetupUserLanguage","uiStore","adminLanguage","userLanguage","setUserLanguage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACzC,MAAIA,OAAO,CAACC,aAAR,KAA0B,IAA9B,EAAoC;AAClC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFF,EAGE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAED,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EASE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEH,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF;AAkBD,GAnBD,MAmBO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAFF,EAGE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEH,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EASE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEH,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgC,WAAhC,GAA8C,MADzD;AAEE,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF;AAkBD;AACF,CAxCD;;AA0CA,eAAeP,MAAM,CAAC,SAAD,CAAN,CAAkBC,QAAQ,CAACE,iBAAD,CAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport Button from \"@material-ui/core/Button\";\n\nconst SetupUserLanguage = ({ uiStore }) => {\n  if (uiStore.adminLanguage === \"nl\") {\n    return (\n      <section>\n        <h2>Kies de taal voor de gebruiker</h2>\n        <p>Deze kan op elk moment nog gewijzigd worden</p>\n        <Button\n          variant={uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"nl\")}\n        >\n          NL\n        </Button>\n        <Button\n          variant={uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"fr\")}\n        >\n          FR\n        </Button>\n      </section>\n    );\n  } else {\n    return (\n      <section>\n        <h2>Choisissez la langue pour l'utilisateur</h2>\n        <p>Cela peut être modifié à tout moment </p>\n        <Button\n          variant={uiStore.userLanguage === \"nl\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"nl\")}\n        >\n          NL\n        </Button>\n        <Button\n          variant={uiStore.userLanguage === \"fr\" ? \"contained\" : \"text\"}\n          onClick={() => uiStore.setUserLanguage(\"fr\")}\n        >\n          FR\n        </Button>\n      </section>\n    );\n  }\n};\n\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));\n"]},"metadata":{},"sourceType":"module"}