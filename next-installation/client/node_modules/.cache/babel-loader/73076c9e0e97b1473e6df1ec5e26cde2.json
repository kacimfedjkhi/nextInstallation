{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport styled from \"styled-components\";\nimport languageBtn from \"../../assets/img/languageBtn.png\";\nimport activeLanguageBtn from \"../../assets/img/activeLanguageBtn.png\";\nimport languageDivider from \"../../assets/img/languageDivider_s.png\";\n\nconst SetupUserLanguage = ({\n  uiStore\n}) => {\n  return React.createElement(\"setUserLanguageContainer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Kies de standaardtaal van de \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"gebruiker\")) : React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Choisissez la langue par d\\xE9faut de \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"l'utilisateur\")), React.createElement(ButtonWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(LanguageBtn, {\n    img: uiStore.userLanguage === \"nl\" ? activeLanguageBtn : languageBtn,\n    onClick: () => uiStore.setUserLanguage(\"nl\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"NL\"), React.createElement(\"img\", {\n    src: languageDivider,\n    width: \"40\",\n    alt: \"language divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(LanguageBtn, {\n    img: uiStore.userLanguage === \"fr\" ? activeLanguageBtn : languageBtn,\n    onClick: () => uiStore.setUserLanguage(\"fr\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"FR\")), React.createElement(LanguageTxt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? content.nl.language : content.fr.language));\n};\n\nconst content = {\n  nl: {\n    language: \"Deze taal kan op ieder moment aangepast worden door de gebruiker tijdens het gebruik van de installatie.\"\n  },\n  fr: {\n    language: \"Cette langue peut être modifiée à tout moment par l'utilisateur pendant l'utilisation de l'installation.\"\n  }\n};\nconst setUserLanguageContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst Title = styled.h2`\n  font-weight: bold;\n  color: #8089ce;\n  font-size: 4rem;\n  max-width: 60rem;\n  padding: 2rem 0;\n  text-align: center;\n\n  && span {\n    color: #4e5587;\n  }\n`;\nconst LanguageBtn = styled.button`\n  border: none;\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-color: transparent;\n  width: 22.5rem;\n\n  font-family: \"Aracne\";\n  font-size: 11.5rem;\n  color: white;\n\n  &:focus {\n    outline: none;\n  }\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 5rem 0 2rem 0;\n`;\nconst LanguageTxt = styled.p`\n  font-size: 1.6rem;\n  max-width: 50rem;\n  font-weight: 600;\n  line-height: 2rem;\n  text-align: center;\n  color: #bababa;\n  margin: 0 auto;\n`;\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupUserLanguage.jsx"],"names":["React","inject","observer","styled","languageBtn","activeLanguageBtn","languageDivider","SetupUserLanguage","uiStore","adminLanguage","userLanguage","setUserLanguage","content","nl","language","fr","setUserLanguageContainer","section","Title","h2","LanguageBtn","button","props","img","ButtonWrapper","div","LanguageTxt","p"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACzC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,aAAR,KAA0B,IAA1B,GACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD/B,CADD,GAKC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADrC,CANJ,EAUE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAED,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgCL,iBAAhC,GAAoDD,WAD3D;AAEE,IAAA,OAAO,EAAE,MAAMI,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAOE;AAAK,IAAA,GAAG,EAAEL,eAAV;AAA2B,IAAA,KAAK,EAAC,IAAjC;AAAsC,IAAA,GAAG,EAAC,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEE,OAAO,CAACE,YAAR,KAAyB,IAAzB,GAAgCL,iBAAhC,GAAoDD,WAD3D;AAEE,IAAA,OAAO,EAAE,MAAMI,OAAO,CAACG,eAAR,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,CAVF,EA2BE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACC,aAAR,KAA0B,IAA1B,GACGG,OAAO,CAACC,EAAR,CAAWC,QADd,GAEGF,OAAO,CAACG,EAAR,CAAWD,QAHjB,CA3BF,CADF;AAmCD,CApCD;;AAsCA,MAAMF,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE;AACFC,IAAAA,QAAQ,EACN;AAFA,GADU;AAKdC,EAAAA,EAAE,EAAE;AACFD,IAAAA,QAAQ,EACN;AAFA;AALU,CAAhB;AAWA,MAAME,wBAAwB,GAAGb,MAAM,CAACc,OAAQ;;;;;CAAhD;AAOA,MAAMC,KAAK,GAAGf,MAAM,CAACgB,EAAG;;;;;;;;;;;CAAxB;AAaA,MAAMC,WAAW,GAAGjB,MAAM,CAACkB,MAAO;;0BAERC,KAAK,IAAIA,KAAK,CAACC,GAAI;;;;;;;;;;;;;CAF7C;AAiBA,MAAMC,aAAa,GAAGrB,MAAM,CAACsB,GAAI;;;;CAAjC;AAMA,MAAMC,WAAW,GAAGvB,MAAM,CAACwB,CAAE;;;;;;;;CAA7B;AAUA,eAAe1B,MAAM,CAAC,SAAD,CAAN,CAAkBC,QAAQ,CAACK,iBAAD,CAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport styled from \"styled-components\";\nimport languageBtn from \"../../assets/img/languageBtn.png\";\nimport activeLanguageBtn from \"../../assets/img/activeLanguageBtn.png\";\nimport languageDivider from \"../../assets/img/languageDivider_s.png\";\n\nconst SetupUserLanguage = ({ uiStore }) => {\n  return (\n    <setUserLanguageContainer>\n      {uiStore.adminLanguage === \"nl\" ? (\n        <Title>\n          Kies de standaardtaal van de <span>gebruiker</span>\n        </Title>\n      ) : (\n        <Title>\n          Choisissez la langue par défaut de <span>l'utilisateur</span>\n        </Title>\n      )}\n      <ButtonWrapper>\n        <LanguageBtn\n          img={uiStore.userLanguage === \"nl\" ? activeLanguageBtn : languageBtn}\n          onClick={() => uiStore.setUserLanguage(\"nl\")}\n        >\n          NL\n        </LanguageBtn>\n        <img src={languageDivider} width=\"40\" alt=\"language divider\" />\n\n        <LanguageBtn\n          img={uiStore.userLanguage === \"fr\" ? activeLanguageBtn : languageBtn}\n          onClick={() => uiStore.setUserLanguage(\"fr\")}\n        >\n          FR\n        </LanguageBtn>\n      </ButtonWrapper>\n\n      <LanguageTxt>\n        {uiStore.adminLanguage === \"nl\"\n          ? content.nl.language\n          : content.fr.language}\n      </LanguageTxt>\n    </setUserLanguageContainer>\n  );\n};\n\nconst content = {\n  nl: {\n    language:\n      \"Deze taal kan op ieder moment aangepast worden door de gebruiker tijdens het gebruik van de installatie.\"\n  },\n  fr: {\n    language:\n      \"Cette langue peut être modifiée à tout moment par l'utilisateur pendant l'utilisation de l'installation.\"\n  }\n};\n\nconst setUserLanguageContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h2`\n  font-weight: bold;\n  color: #8089ce;\n  font-size: 4rem;\n  max-width: 60rem;\n  padding: 2rem 0;\n  text-align: center;\n\n  && span {\n    color: #4e5587;\n  }\n`;\n\nconst LanguageBtn = styled.button`\n  border: none;\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-color: transparent;\n  width: 22.5rem;\n\n  font-family: \"Aracne\";\n  font-size: 11.5rem;\n  color: white;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 5rem 0 2rem 0;\n`;\n\nconst LanguageTxt = styled.p`\n  font-size: 1.6rem;\n  max-width: 50rem;\n  font-weight: 600;\n  line-height: 2rem;\n  text-align: center;\n  color: #bababa;\n  margin: 0 auto;\n`;\n\nexport default inject(\"uiStore\")(observer(SetupUserLanguage));\n"]},"metadata":{},"sourceType":"module"}