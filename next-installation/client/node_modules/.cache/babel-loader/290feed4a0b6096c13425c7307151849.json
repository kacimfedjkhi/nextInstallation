{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport UIStore from \"../store/UIStore\";\nimport styled from \"styled-components\";\n\nconst ThemesList = ({\n  writeStore\n}) => {\n  const handleClickTheme = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [\"art\", \"culinair\", \"news\", \"tech\", \"nature\", \"tourism\"];\n  return React.createElement(React.Fragment, null, themes.map(theme => React.createElement(ThemeButton, {\n    img: UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr,\n    key: theme,\n    onClick: () => handleClickTheme(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr))));\n};\n\nconst ThemeButton = styled.button`\n  background-image: url(${props => props.img}.png);\n  border: none;\n  width: 15rem;\n  height: 10rem;\n`;\nexport default inject(`writeStore`)(observer(ThemesList));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/Themes.jsx"],"names":["React","inject","observer","UIStore","styled","ThemesList","writeStore","handleClickTheme","e","theme","themes","map","userLanguage","nl","fr","ThemeButton","button","props","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5BF,IAAAA,UAAU,CAACG,KAAX,GAAmBD,CAAnB;AACD,GAFD;;AAIA,QAAME,MAAM,GAAG,CACZ,KADY,EAKZ,UALY,EASZ,MATY,EAaZ,MAbY,EAiBZ,QAjBY,EAqBZ,SArBY,CAAf;AA2BA,SACE,0CACGA,MAAM,CAACC,GAAP,CAAWF,KAAK,IACf,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEN,OAAO,CAACS,YAAR,KAAyB,IAAzB,GAAgCH,KAAK,CAACI,EAAtC,GAA2CJ,KAAK,CAACK,EADxD;AAEE,IAAA,GAAG,EAAEL,KAFP;AAGE,IAAA,OAAO,EAAE,MAAMF,gBAAgB,CAACE,KAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,OAAO,CAACS,YAAR,KAAyB,IAAzB,GAAgCH,KAAK,CAACI,EAAtC,GAA2CJ,KAAK,CAACK,EAArD,CALF,CADD,CADH,CADF;AAaD,CA7CD;;AA+CA,MAAMC,WAAW,GAAGX,MAAM,CAACY,MAAO;0BACRC,KAAK,IAAIA,KAAK,CAACC,GAAI;;;;CAD7C;AAOA,eAAejB,MAAM,CAAE,YAAF,CAAN,CAAqBC,QAAQ,CAACG,UAAD,CAA7B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport UIStore from \"../store/UIStore\";\nimport styled from \"styled-components\";\n\nconst ThemesList = ({ writeStore }) => {\n  const handleClickTheme = e => {\n    writeStore.theme = e;\n  };\n\n  const themes = [\n    (\"art\": {\n      nl: \"kunst\",\n      fr: \"art\"\n    }),\n    (\"culinair\": {\n      nl: \"culinair\",\n      fr: \"culinaire\"\n    }),\n    (\"news\": {\n      nl: \"actualiteit\",\n      fr: \"actualite\"\n    }),\n    (\"tech\": {\n      nl: \"technologie\",\n      fr: \"technologie\"\n    }),\n    (\"nature\": {\n      nl: \"natuur\",\n      fr: \"nature\"\n    }),\n    (\"tourism\": {\n      nl: \"toerisme\",\n      fr: \"tourisme\"\n    })\n  ];\n\n  return (\n    <>\n      {themes.map(theme => (\n        <ThemeButton\n          img={UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr}\n          key={theme}\n          onClick={() => handleClickTheme(theme)}\n        >\n          <p>{UIStore.userLanguage === \"nl\" ? theme.nl : theme.fr}</p>\n        </ThemeButton>\n      ))}\n    </>\n  );\n};\n\nconst ThemeButton = styled.button`\n  background-image: url(${props => props.img}.png);\n  border: none;\n  width: 15rem;\n  height: 10rem;\n`;\n\nexport default inject(`writeStore`)(observer(ThemesList));\n"]},"metadata":{},"sourceType":"module"}