{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Admin.jsx\";\nimport React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport { ROUTES } from \"../constants\";\nimport backgroundImage from \"../assets/img/adminBg.jpg\";\nimport languageBtn from \"../assets/img/languageBtn.png\";\nimport activeLanguageBtn from \"../assets/img/activeLanguageBtn.png\";\nimport languageDivider from \"../assets/img/languageDivider.png\";\nimport configurationButton from \"../assets/img/configurationButton.png\";\n\nconst Admin = ({\n  uiStore\n}) => {\n  return React.createElement(StyledPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(StyledTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Kies uw taal \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" \", React.createElement(StyledTitleSpan, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"choisissez votre langue\")), React.createElement(LanguageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(DutchOption, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(LanguageBtn, {\n    img: uiStore.adminLanguage === \"nl\" ? activeLanguageBtn : languageBtn,\n    onClick: () => uiStore.setAdminLanguage(\"nl\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"NL\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(LanguageTitle, {\n    color: uiStore.adminLanguage === \"nl\" ? \"#8089ce\" : \"#bababa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Nederlands\"), React.createElement(LanguageTxt, {\n    color: uiStore.adminLanguage === \"nl\" ? \"#8089ce\" : \"#bababa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Deze taal stelt u in om de installatie op te starten en heeft geen verdere invloed op de installatie zelf.\"))), React.createElement(\"img\", {\n    src: languageDivider,\n    width: \"60\",\n    alt: \"language divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(LanguageBtn, {\n    img: uiStore.adminLanguage === \"fr\" ? activeLanguageBtn : languageBtn,\n    onClick: () => uiStore.setAdminLanguage(\"fr\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"FR\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(LanguageTitle, {\n    color: uiStore.adminLanguage === \"fr\" ? \"#8089ce\" : \"#bababa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"fran\\xE7ais\"), React.createElement(LanguageTxt, {\n    color: uiStore.adminLanguage === \"fr\" ? \"#8089ce\" : \"#bababa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Vous d\\xE9finissez cette langue pour l'installation pour d\\xE9marrer et n'a pas plus influence sur l'installation elle-m\\xEAme.\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), uiStore.adminLanguage !== \"\" ? React.createElement(Link, {\n    to: ROUTES.setup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(ConfigurationBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, uiStore.adminLanguage === \"nl\" ? content.nl.startBtn : content.fr.startBtn)) : null));\n};\n\nconst content = {\n  nl: {\n    startBtn: \"Installatie verder configureren\"\n  },\n  fr: {\n    startBtn: \"Configurer davantage l'installation\"\n  }\n};\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst StyledTitle = styled.h1`\n  font-size: 40px;\n  font-weight: bold;\n  color: #8089ce;\n  text-align: center;\n  margin-bottom: 5rem;\n`;\nconst StyledTitleSpan = styled.span`\n  color: #4e5587;\n`;\nconst LanguageBtn = styled.button`\n  border: none;\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-color: transparent;\n  width: 20rem;\n\n  font-family: \"Aracne\";\n  font-size: 11.5rem;\n  color: white;\n\n  &:focus {\n    outline: none;\n  }\n`;\nconst LanguageContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding: 5rem 0;\n`;\nconst LanguageTitle = styled.h2`\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #bababa;\n  font-size: 2rem;\n  padding: 2rem 0;\n  color: ${props => props.color};\n`;\nconst LanguageTxt = styled.p`\n  font-size: 1.6rem;\n  max-width: 31rem;\n  font-weight: 600;\n  line-height: 2rem;\n  color: ${props => props.color};\n`;\nconst DutchOption = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  && div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    padding-right: 2.5rem;\n  }\n\n  ${LanguageTxt} {\n    text-align: right;\n  }\n`;\nconst ConfigurationBtn = styled.button`\n  background-image: url(${configurationButton});\n  background-size: contain;\n  background-repeat: no-repeat;\n  border: none;\n  background-color: transparent;\n  width: 50rem;\n  height: 8rem;\n\n  font-size: 2.5rem;\n  color: white;\n  font-family: \"Nunito\";\n  font-weight: bold;\n\n  transform: translateX(25%);\n\n  &:focus {\n    outline: none;\n    transform: scale(0.95);\n  }\n`;\nAdmin.propTypes = {\n  uiStore: PropTypes.observableObject.isRequired\n};\nexport default inject(`uiStore`)(observer(Admin));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Admin.jsx"],"names":["React","inject","observer","PropTypes","Link","styled","Button","ROUTES","backgroundImage","languageBtn","activeLanguageBtn","languageDivider","configurationButton","Admin","uiStore","adminLanguage","setAdminLanguage","setup","content","nl","startBtn","fr","StyledPage","section","StyledTitle","h1","StyledTitleSpan","span","LanguageBtn","button","props","img","LanguageContainer","LanguageTitle","h2","color","LanguageTxt","p","DutchOption","div","ConfigurationBtn","propTypes","observableObject","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport { ROUTES } from \"../constants\";\n\nimport backgroundImage from \"../assets/img/adminBg.jpg\";\nimport languageBtn from \"../assets/img/languageBtn.png\";\nimport activeLanguageBtn from \"../assets/img/activeLanguageBtn.png\";\nimport languageDivider from \"../assets/img/languageDivider.png\";\nimport configurationButton from \"../assets/img/configurationButton.png\";\n\nconst Admin = ({ uiStore }) => {\n  return (\n    <StyledPage>\n      <div>\n        <StyledTitle>\n          Kies uw taal <br />{\" \"}\n          <StyledTitleSpan>choisissez votre langue</StyledTitleSpan>\n        </StyledTitle>\n        <LanguageContainer>\n          <DutchOption>\n            <LanguageBtn\n              img={\n                uiStore.adminLanguage === \"nl\" ? activeLanguageBtn : languageBtn\n              }\n              onClick={() => uiStore.setAdminLanguage(\"nl\")}\n            >\n              NL\n            </LanguageBtn>\n            <div>\n              <LanguageTitle\n                color={uiStore.adminLanguage === \"nl\" ? \"#8089ce\" : \"#bababa\"}\n              >\n                Nederlands\n              </LanguageTitle>\n              <LanguageTxt\n                color={uiStore.adminLanguage === \"nl\" ? \"#8089ce\" : \"#bababa\"}\n              >\n                Deze taal stelt u in om de installatie op te starten en heeft\n                geen verdere invloed op de installatie zelf.\n              </LanguageTxt>\n            </div>\n          </DutchOption>\n          <img src={languageDivider} width=\"60\" alt=\"language divider\" />\n          <div>\n            <LanguageBtn\n              img={\n                uiStore.adminLanguage === \"fr\" ? activeLanguageBtn : languageBtn\n              }\n              onClick={() => uiStore.setAdminLanguage(\"fr\")}\n            >\n              FR\n            </LanguageBtn>\n            <div>\n              <LanguageTitle\n                color={uiStore.adminLanguage === \"fr\" ? \"#8089ce\" : \"#bababa\"}\n              >\n                français\n              </LanguageTitle>\n              <LanguageTxt\n                color={uiStore.adminLanguage === \"fr\" ? \"#8089ce\" : \"#bababa\"}\n              >\n                Vous définissez cette langue pour l'installation pour démarrer\n                et n'a pas plus influence sur l'installation elle-même.\n              </LanguageTxt>\n            </div>\n          </div>\n        </LanguageContainer>\n        <br />\n\n        {uiStore.adminLanguage !== \"\" ? (\n          <Link to={ROUTES.setup}>\n            <ConfigurationBtn>\n              {uiStore.adminLanguage === \"nl\"\n                ? content.nl.startBtn\n                : content.fr.startBtn}\n            </ConfigurationBtn>\n          </Link>\n        ) : null}\n      </div>\n    </StyledPage>\n  );\n};\n\nconst content = {\n  nl: {\n    startBtn: \"Installatie verder configureren\"\n  },\n  fr: {\n    startBtn: \"Configurer davantage l'installation\"\n  }\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledTitle = styled.h1`\n  font-size: 40px;\n  font-weight: bold;\n  color: #8089ce;\n  text-align: center;\n  margin-bottom: 5rem;\n`;\n\nconst StyledTitleSpan = styled.span`\n  color: #4e5587;\n`;\n\nconst LanguageBtn = styled.button`\n  border: none;\n  background-image: url(${props => props.img});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-color: transparent;\n  width: 20rem;\n\n  font-family: \"Aracne\";\n  font-size: 11.5rem;\n  color: white;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst LanguageContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding: 5rem 0;\n`;\n\nconst LanguageTitle = styled.h2`\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #bababa;\n  font-size: 2rem;\n  padding: 2rem 0;\n  color: ${props => props.color};\n`;\n\nconst LanguageTxt = styled.p`\n  font-size: 1.6rem;\n  max-width: 31rem;\n  font-weight: 600;\n  line-height: 2rem;\n  color: ${props => props.color};\n`;\n\nconst DutchOption = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  && div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    padding-right: 2.5rem;\n  }\n\n  ${LanguageTxt} {\n    text-align: right;\n  }\n`;\n\nconst ConfigurationBtn = styled.button`\n  background-image: url(${configurationButton});\n  background-size: contain;\n  background-repeat: no-repeat;\n  border: none;\n  background-color: transparent;\n  width: 50rem;\n  height: 8rem;\n\n  font-size: 2.5rem;\n  color: white;\n  font-family: \"Nunito\";\n  font-weight: bold;\n\n  transform: translateX(25%);\n\n  &:focus {\n    outline: none;\n    transform: scale(0.95);\n  }\n`;\n\nAdmin.propTypes = {\n  uiStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`uiStore`)(observer(Admin));\n"]},"metadata":{},"sourceType":"module"}