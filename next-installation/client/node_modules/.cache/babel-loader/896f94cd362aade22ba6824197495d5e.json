{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx\";\nimport React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Answer = ({\n  openStore\n}) => {\n  const card = openStore.showCard();\n  console.log(\"TESTLOG\", card);\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Dit is jou gekozen kaartje binnen het thema \\\"culinair\\\"!\"), React.createElement(ReactCardFlip, {\n    isFlipped: writeStore.cardFlipped,\n    flipDirection: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.front,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Uw kaartje\"), selectedTheme ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, selectedTheme) : null, message ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, message) : null)), React.createElement(\"div\", {\n    className: classes.back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1514918956881-335d75e3c0c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"THISISTHEBACK\")))), React.createElement(Button, {\n    onClick: writeStore.handleFlipCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"flip\"));\n};\n\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\nexport default inject(`openStore`)(observer(Answer));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx"],"names":["React","inject","observer","PropTypes","makeStyles","Paper","Button","ReactCardFlip","Answer","openStore","card","showCard","console","log","writeStore","cardFlipped","classes","front","selectedTheme","message","back","handleFlipCard","propTypes","observableObject","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,YAA5C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAChC,QAAMC,IAAI,GAAGD,SAAS,CAACE,QAAV,EAAb;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;AAEA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADF,EAEE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAEI,UAAU,CAACC,WADxB;AAEE,IAAA,aAAa,EAAC,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGC,aAAa,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,aAAJ,CAAH,GAA4B,IAF5C,EAGGC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CAAH,GAAsB,IAHhC,CADF,CAJF,EAWE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAC,wIADN;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF,CAXF,CAFF,EAuBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,UAAU,CAACO,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,CADF;AA2BD,CAhCD;;AAkCAb,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,SAAS,EAAEN,SAAS,CAACoB,gBAAV,CAA2BC;AADrB,CAAnB;AAIA,eAAevB,MAAM,CAAE,WAAF,CAAN,CAAoBC,QAAQ,CAACM,MAAD,CAA5B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Answer = ({ openStore }) => {\n  const card = openStore.showCard();\n\n  console.log(\"TESTLOG\", card);\n\n  return (\n    <>\n      <h1>Dit is jou gekozen kaartje binnen het thema \"culinair\"!</h1>\n      <ReactCardFlip\n        isFlipped={writeStore.cardFlipped}\n        flipDirection=\"vertical\"\n      >\n        <div className={classes.front}>\n          <Paper elevation={3}>\n            <h3>Uw kaartje</h3>\n            {selectedTheme ? <p>{selectedTheme}</p> : null}\n            {message ? <p>{message}</p> : null}\n          </Paper>\n        </div>\n        <div className={classes.back}>\n          <Paper elevation={3}>\n            <img\n              src=\"https://images.unsplash.com/photo-1514918956881-335d75e3c0c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80\"\n              alt=\"\"\n            />\n            <p>THISISTHEBACK</p>\n          </Paper>\n        </div>\n      </ReactCardFlip>\n      <Button onClick={writeStore.handleFlipCard}>flip</Button>\n    </>\n  );\n};\n\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`openStore`)(observer(Answer));\n"]},"metadata":{},"sourceType":"module"}