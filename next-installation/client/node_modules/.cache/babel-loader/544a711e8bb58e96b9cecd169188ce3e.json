{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupEvent.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst SetupEvent = ({\n  uiStore\n}) => {\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      onChange: e => uiStore.toggleCheckedEvent(e),\n      value: \"checkedA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    label: uiStore.adminLanguage === \"nl\" ? content.nl.event : content.fr.event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Op deze manier kan gedetailleerder weergegeven worden waar de kaartjes zich bevinden.\"), uiStore.event ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Voer de naam van het evenement in\"), React.createElement(TextField, {\n    label: \"Naam event\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    style: {\n      width: 300\n    },\n    onChange: e => uiStore.addEventName(e.currentTarget.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : null);\n};\n\nconst content = {\n  nl: {\n    event: \"er is momenteel een event gaande op deze locatie\",\n    eventTxt: \"Op deze manier krijgt de gebruiker meer informatie over het evenement waar zijn of haar kaartje zich bevindt.\"\n  },\n  fr: {\n    event: \"Il y a actuellement un événement à cet endroit\",\n    eventTxt: \"Il est ainsi possible de montrer plus en détail où les cartes postales sont localisés.\"\n  }\n};\nexport default inject(\"uiStore\")(observer(SetupEvent));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupEvent.jsx"],"names":["React","inject","observer","TextField","FormControlLabel","Checkbox","SetupEvent","uiStore","e","toggleCheckedEvent","adminLanguage","content","nl","event","fr","width","addEventName","currentTarget","value","eventTxt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAClC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EACL,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEC,CAAC,IAAID,OAAO,CAACE,kBAAR,CAA2BD,CAA3B,CADjB;AAEE,MAAA,KAAK,EAAC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAOE,IAAA,KAAK,EACHD,OAAO,CAACG,aAAR,KAA0B,IAA1B,GAAiCC,OAAO,CAACC,EAAR,CAAWC,KAA5C,GAAoDF,OAAO,CAACG,EAAR,CAAWD,KARnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAZF,EAgBGN,OAAO,CAACM,KAAR,GACC,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,QAAQ,EAAEP,CAAC,IAAID,OAAO,CAACS,YAAR,CAAqBR,CAAC,CAACS,aAAF,CAAgBC,KAArC,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,GAWG,IA3BN,CADF;AA+BD,CAhCD;;AAkCA,MAAMP,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE;AACFC,IAAAA,KAAK,EAAE,kDADL;AAEFM,IAAAA,QAAQ,EACN;AAHA,GADU;AAMdL,EAAAA,EAAE,EAAE;AACFD,IAAAA,KAAK,EAAE,gDADL;AAEFM,IAAAA,QAAQ,EACN;AAHA;AANU,CAAhB;AAaA,eAAelB,MAAM,CAAC,SAAD,CAAN,CAAkBC,QAAQ,CAACI,UAAD,CAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst SetupEvent = ({ uiStore }) => {\n  return (\n    <section>\n      <FormControlLabel\n        control={\n          <Checkbox\n            onChange={e => uiStore.toggleCheckedEvent(e)}\n            value=\"checkedA\"\n          />\n        }\n        label={\n          uiStore.adminLanguage === \"nl\" ? content.nl.event : content.fr.event\n        }\n      />\n      <p>\n        Op deze manier kan gedetailleerder weergegeven worden waar de kaartjes\n        zich bevinden.\n      </p>\n      {uiStore.event ? (\n        <>\n          <p>Voer de naam van het evenement in</p>\n          <TextField\n            label=\"Naam event\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ width: 300 }}\n            onChange={e => uiStore.addEventName(e.currentTarget.value)}\n          />\n        </>\n      ) : null}\n    </section>\n  );\n};\n\nconst content = {\n  nl: {\n    event: \"er is momenteel een event gaande op deze locatie\",\n    eventTxt:\n      \"Op deze manier krijgt de gebruiker meer informatie over het evenement waar zijn of haar kaartje zich bevindt.\"\n  },\n  fr: {\n    event: \"Il y a actuellement un événement à cet endroit\",\n    eventTxt:\n      \"Il est ainsi possible de montrer plus en détail où les cartes postales sont localisés.\"\n  }\n};\n\nexport default inject(\"uiStore\")(observer(SetupEvent));\n"]},"metadata":{},"sourceType":"module"}