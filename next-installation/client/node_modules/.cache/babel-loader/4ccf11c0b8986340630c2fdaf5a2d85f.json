{"ast":null,"code":"import { decorate, observable, action } from \"mobx\"; //import { decorate, observable, action } from \"mobx\";\n\nclass UIStore {\n  constructor(rootStore) {\n    this.selectedAction = \"\";\n    this.setupStep = 0;\n    this.adminLanguage = \"\";\n    this.userLanguage = \"\";\n    this.locationType = \"cultuurhuis\";\n    this.selectedLocation = \"\";\n    this.event = false;\n    this.eventName = \"\";\n    this.modal = false;\n\n    this.setAdminLanguage = language => {\n      switch (language) {\n        case \"nl\":\n          this.adminLanguage = \"nl\";\n          console.log(language);\n          break;\n\n        case \"fr\":\n          this.adminLanguage = \"fr\";\n          break;\n\n        default:\n          return \"nl\";\n      }\n    };\n\n    this.setUserLanguage = language => {\n      switch (language) {\n        case \"nl\":\n          this.userLanguage = \"nl\";\n          console.log(language);\n          break;\n\n        case \"fr\":\n          this.userLanguage = \"fr\";\n          break;\n\n        default:\n          return \"nl\";\n      }\n    };\n\n    this.handleChangeLocation = value => {\n      console.log(value);\n      this.selectedLocation = value;\n    };\n\n    this.changeLocationType = value => {\n      switch (value) {\n        case \"cultuurhuis\":\n          this.locationType = value;\n          break;\n\n        case \"openbaar\":\n          this.locationType = value;\n          break;\n\n        default:\n          return value;\n      }\n    };\n\n    this.toggleCheckedEvent = e => {\n      if (!this.event) {\n        this.event = true;\n      } else {\n        this.event = false;\n      }\n    };\n\n    this.addEventName = value => {\n      this.eventName = value;\n    };\n\n    this.handleToggleModal = () => {\n      this.modal ? this.modal = false : this.modal = true;\n    };\n\n    this.rootStore = rootStore;\n  }\n\n}\n\ndecorate(UIStore, {\n  adminLanguage: observable,\n  userLanguage: observable,\n  selectedLocation: observable,\n  locationType: observable,\n  event: observable,\n  eventName: observable,\n  selectedAction: observable,\n  modal: observable,\n  setAdminLanguage: action,\n  setUserLanguage: action,\n  changeLocationType: action,\n  toggleCheckedEvent: action,\n  addEventName: action\n});\nexport default UIStore;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/store/UIStore.js"],"names":["decorate","observable","action","UIStore","constructor","rootStore","selectedAction","setupStep","adminLanguage","userLanguage","locationType","selectedLocation","event","eventName","modal","setAdminLanguage","language","console","log","setUserLanguage","handleChangeLocation","value","changeLocationType","toggleCheckedEvent","e","addEventName","handleToggleModal"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C,C,CAEA;;AAEA,MAAMC,OAAN,CAAc;AAaZC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAZvBC,cAYuB,GAZN,EAYM;AAAA,SAXvBC,SAWuB,GAXX,CAWW;AAAA,SAVvBC,aAUuB,GAVP,EAUO;AAAA,SARvBC,YAQuB,GARR,EAQQ;AAAA,SAPvBC,YAOuB,GAPR,aAOQ;AAAA,SANvBC,gBAMuB,GANJ,EAMI;AAAA,SAJvBC,KAIuB,GAJf,KAIe;AAAA,SAHvBC,SAGuB,GAHX,EAGW;AAAA,SAFvBC,KAEuB,GAFf,KAEe;;AAAA,SAIvBC,gBAJuB,GAIJC,QAAQ,IAAI;AAC7B,cAAQA,QAAR;AACE,aAAK,IAAL;AACE,eAAKR,aAAL,GAAqB,IAArB;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA;;AACF,aAAK,IAAL;AACE,eAAKR,aAAL,GAAqB,IAArB;AACA;;AACF;AACE,iBAAO,IAAP;AAVJ;AAYD,KAjBsB;;AAAA,SAmBvBW,eAnBuB,GAmBLH,QAAQ,IAAI;AAC5B,cAAQA,QAAR;AACE,aAAK,IAAL;AACE,eAAKP,YAAL,GAAoB,IAApB;AACAQ,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA;;AACF,aAAK,IAAL;AACE,eAAKP,YAAL,GAAoB,IAApB;AACA;;AACF;AACE,iBAAO,IAAP;AAVJ;AAYD,KAhCsB;;AAAA,SAkCvBW,oBAlCuB,GAkCAC,KAAK,IAAI;AAC9BJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEA,WAAKV,gBAAL,GAAwBU,KAAxB;AACD,KAtCsB;;AAAA,SAwCvBC,kBAxCuB,GAwCFD,KAAK,IAAI;AAC5B,cAAQA,KAAR;AACE,aAAK,aAAL;AACE,eAAKX,YAAL,GAAoBW,KAApB;AACA;;AACF,aAAK,UAAL;AACE,eAAKX,YAAL,GAAoBW,KAApB;AACA;;AACF;AACE,iBAAOA,KAAP;AARJ;AAUD,KAnDsB;;AAAA,SAqDvBE,kBArDuB,GAqDFC,CAAC,IAAI;AACxB,UAAI,CAAC,KAAKZ,KAAV,EAAiB;AACf,aAAKA,KAAL,GAAa,IAAb;AACD,OAFD,MAEO;AACL,aAAKA,KAAL,GAAa,KAAb;AACD;AACF,KA3DsB;;AAAA,SA6DvBa,YA7DuB,GA6DRJ,KAAK,IAAI;AACtB,WAAKR,SAAL,GAAiBQ,KAAjB;AACD,KA/DsB;;AAAA,SAiEvBK,iBAjEuB,GAiEH,MAAM;AACxB,WAAKZ,KAAL,GAAc,KAAKA,KAAL,GAAa,KAA3B,GAAqC,KAAKA,KAAL,GAAa,IAAlD;AACD,KAnEsB;;AACrB,SAAKT,SAAL,GAAiBA,SAAjB;AACD;;AAfW;;AAmFdL,QAAQ,CAACG,OAAD,EAAU;AAChBK,EAAAA,aAAa,EAAEP,UADC;AAEhBQ,EAAAA,YAAY,EAAER,UAFE;AAGhBU,EAAAA,gBAAgB,EAAEV,UAHF;AAIhBS,EAAAA,YAAY,EAAET,UAJE;AAKhBW,EAAAA,KAAK,EAAEX,UALS;AAMhBY,EAAAA,SAAS,EAAEZ,UANK;AAOhBK,EAAAA,cAAc,EAAEL,UAPA;AAQhBa,EAAAA,KAAK,EAAEb,UARS;AAShBc,EAAAA,gBAAgB,EAAEb,MATF;AAUhBiB,EAAAA,eAAe,EAAEjB,MAVD;AAWhBoB,EAAAA,kBAAkB,EAAEpB,MAXJ;AAYhBqB,EAAAA,kBAAkB,EAAErB,MAZJ;AAahBuB,EAAAA,YAAY,EAAEvB;AAbE,CAAV,CAAR;AAgBA,eAAeC,OAAf","sourcesContent":["import { decorate, observable, action } from \"mobx\";\n\n//import { decorate, observable, action } from \"mobx\";\n\nclass UIStore {\n  selectedAction = \"\";\n  setupStep = 0;\n  adminLanguage = \"\";\n\n  userLanguage = \"\";\n  locationType = \"cultuurhuis\";\n  selectedLocation = \"\";\n\n  event = false;\n  eventName = \"\";\n  modal = false;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n  }\n\n  setAdminLanguage = language => {\n    switch (language) {\n      case \"nl\":\n        this.adminLanguage = \"nl\";\n        console.log(language);\n\n        break;\n      case \"fr\":\n        this.adminLanguage = \"fr\";\n        break;\n      default:\n        return \"nl\";\n    }\n  };\n\n  setUserLanguage = language => {\n    switch (language) {\n      case \"nl\":\n        this.userLanguage = \"nl\";\n        console.log(language);\n\n        break;\n      case \"fr\":\n        this.userLanguage = \"fr\";\n        break;\n      default:\n        return \"nl\";\n    }\n  };\n\n  handleChangeLocation = value => {\n    console.log(value);\n\n    this.selectedLocation = value;\n  };\n\n  changeLocationType = value => {\n    switch (value) {\n      case \"cultuurhuis\":\n        this.locationType = value;\n        break;\n      case \"openbaar\":\n        this.locationType = value;\n        break;\n      default:\n        return value;\n    }\n  };\n\n  toggleCheckedEvent = e => {\n    if (!this.event) {\n      this.event = true;\n    } else {\n      this.event = false;\n    }\n  };\n\n  addEventName = value => {\n    this.eventName = value;\n  };\n\n  handleToggleModal = () => {\n    this.modal ? (this.modal = false) : (this.modal = true);\n  };\n}\n\ndecorate(UIStore, {\n  adminLanguage: observable,\n  userLanguage: observable,\n  selectedLocation: observable,\n  locationType: observable,\n  event: observable,\n  eventName: observable,\n  selectedAction: observable,\n  modal: observable,\n  setAdminLanguage: action,\n  setUserLanguage: action,\n  changeLocationType: action,\n  toggleCheckedEvent: action,\n  addEventName: action\n});\n\nexport default UIStore;\n"]},"metadata":{},"sourceType":"module"}