{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupEvent.jsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst SetupEvent = ({\n  uiStore\n}) => {\n  if (uiStore.adminLanguage === \"nl\") {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        onChange: e => uiStore.toggleCheckedEvent(e),\n        value: \"checkedA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }),\n      label: uiStore.adminLanguage === \"nl\" ? content.nl.event : content.fr.event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Op deze manier kan gedetailleerder weergegeven worden waar de kaartjes zich bevinden.\"), uiStore.event ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Voer de naam van het evenement in\"), React.createElement(TextField, {\n      label: \"Naam event\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      style: {\n        width: 300\n      },\n      onChange: e => uiStore.addEventName(e.currentTarget.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })) : null);\n  } else {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        onChange: e => uiStore.toggleCheckedEvent(e),\n        value: \"event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      label: \" Il y a actuellement un \\xE9v\\xE9nement \\xE0 cet endroit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Il est ainsi possible de montrer plus en d\\xE9tail o\\xF9 les cartes postales sont localis\\xE9s.\"), uiStore.event ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Inserez le nom d'\\xE9v\\xE9nement\"), React.createElement(TextField, {\n      label: \"Nom d'\\xE9v\\xE9nement\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      style: {\n        width: 300\n      },\n      onChange: e => uiStore.addEventName(e.currentTarget.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })) : null);\n  }\n};\n\nconst content = {\n  nl: {\n    event: \"er is momenteel een event gaande op deze locatie\"\n  },\n  fr: {\n    event: \"Il y a actuellement un événement à cet endroit\"\n  }\n};\nexport default inject(\"uiStore\")(observer(SetupEvent));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/components/setup/SetupEvent.jsx"],"names":["React","inject","observer","TextField","FormControlLabel","Checkbox","SetupEvent","uiStore","adminLanguage","e","toggleCheckedEvent","content","nl","event","fr","width","addEventName","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAClC,MAAIA,OAAO,CAACC,aAAR,KAA0B,IAA9B,EAAoC;AAClC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEC,CAAC,IAAIF,OAAO,CAACG,kBAAR,CAA2BD,CAA3B,CADjB;AAEE,QAAA,KAAK,EAAC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAOE,MAAA,KAAK,EACHF,OAAO,CAACC,aAAR,KAA0B,IAA1B,GAAiCG,OAAO,CAACC,EAAR,CAAWC,KAA5C,GAAoDF,OAAO,CAACG,EAAR,CAAWD,KARnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAZF,EAgBGN,OAAO,CAACM,KAAR,GACC,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,QAAQ,EAAEN,CAAC,IAAIF,OAAO,CAACS,YAAR,CAAqBP,CAAC,CAACQ,aAAF,CAAgBC,KAArC,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,GAWG,IA3BN,CADF;AA+BD,GAhCD,MAgCO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAET,CAAC,IAAIF,OAAO,CAACG,kBAAR,CAA2BD,CAA3B,CADjB;AAEE,QAAA,KAAK,EAAC,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAOE,MAAA,KAAK,EAAC,0DAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAXF,EAeGF,OAAO,CAACM,KAAR,GACC,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,uBADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,QAAQ,EAAEN,CAAC,IAAIF,OAAO,CAACS,YAAR,CAAqBP,CAAC,CAACQ,aAAF,CAAgBC,KAArC,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,GAWG,IA1BN,CADF;AA8BD;AACF,CAjED;;AAmEA,MAAMP,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GADU;AAIdC,EAAAA,EAAE,EAAE;AACFD,IAAAA,KAAK,EAAE;AADL;AAJU,CAAhB;AASA,eAAeZ,MAAM,CAAC,SAAD,CAAN,CAAkBC,QAAQ,CAACI,UAAD,CAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst SetupEvent = ({ uiStore }) => {\n  if (uiStore.adminLanguage === \"nl\") {\n    return (\n      <section>\n        <FormControlLabel\n          control={\n            <Checkbox\n              onChange={e => uiStore.toggleCheckedEvent(e)}\n              value=\"checkedA\"\n            />\n          }\n          label={\n            uiStore.adminLanguage === \"nl\" ? content.nl.event : content.fr.event\n          }\n        />\n        <p>\n          Op deze manier kan gedetailleerder weergegeven worden waar de kaartjes\n          zich bevinden.\n        </p>\n        {uiStore.event ? (\n          <>\n            <p>Voer de naam van het evenement in</p>\n            <TextField\n              label=\"Naam event\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              style={{ width: 300 }}\n              onChange={e => uiStore.addEventName(e.currentTarget.value)}\n            />\n          </>\n        ) : null}\n      </section>\n    );\n  } else {\n    return (\n      <section>\n        <FormControlLabel\n          control={\n            <Checkbox\n              onChange={e => uiStore.toggleCheckedEvent(e)}\n              value=\"event\"\n            />\n          }\n          label=\"\n          Il y a actuellement un événement à cet endroit\"\n        />\n        <p>\n          Il est ainsi possible de montrer plus en détail où les cartes postales\n          sont localisés.\n        </p>\n        {uiStore.event ? (\n          <>\n            <p>Inserez le nom d'événement</p>\n            <TextField\n              label=\"Nom d'événement\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              style={{ width: 300 }}\n              onChange={e => uiStore.addEventName(e.currentTarget.value)}\n            />\n          </>\n        ) : null}\n      </section>\n    );\n  }\n};\n\nconst content = {\n  nl: {\n    event: \"er is momenteel een event gaande op deze locatie\"\n  },\n  fr: {\n    event: \"Il y a actuellement un événement à cet endroit\"\n  }\n};\n\nexport default inject(\"uiStore\")(observer(SetupEvent));\n"]},"metadata":{},"sourceType":"module"}