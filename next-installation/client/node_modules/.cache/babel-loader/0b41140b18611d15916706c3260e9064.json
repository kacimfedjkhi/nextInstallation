{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx\";\nimport React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport Card from \"../components/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport Keyboard from \"../components/KeyboardInput\";\nimport styled from \"styled-components\";\nimport backgroundImage from \"../assets/img/onboardingBg.jpg\";\nimport envelope from \"../assets/img/openEnvelope.png\";\nimport turqoiseBtn from \"../assets/img/turqoiseBtn_s_dark.png\";\nimport lightBtn from \"../assets/img/lightBtn_s.png\";\nimport themeImgNl from \"../assets/img/themeMessageBubble_nl.png\";\nimport themeImgFr from \"../assets/img/themeMessageBubble_fr.png\";\n\nconst Answer = ({\n  openStore,\n  writeStore,\n  uiStore\n}) => {\n  const card = openStore.showCard();\n\n  const handleClickAnswer = () => {\n    console.log(\"kakwofd\");\n    openStore.answer = true;\n  };\n\n  const handleAnswerCard = () => {\n    console.log(\"answer\");\n    openStore.answerCard(card.id);\n  };\n\n  return React.createElement(StyledPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ThemeBalloon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: uiStore.userLanguage === \"nl\" ? themeImgNl : themeImgFr,\n    width: \"400\",\n    alt: \"Textballoon with theme \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\\"\", card.theme, \"\\\"\")), React.createElement(CardWrapper, {\n    translate: openStore.answer ? \"26\" : \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Card, {\n    isFlipped: writeStore.cardFlipped,\n    theme: card.theme,\n    message: card.text,\n    answers: card.answers,\n    locations: card.locations,\n    locationCreated: card.locationCreated,\n    writeStore: writeStore,\n    openStore: openStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, !openStore.answer ? React.createElement(React.Fragment, null, React.createElement(AnswerBtn, {\n    onClick: handleClickAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Dit kaartje beantwoorden\"), React.createElement(Link, {\n    to: ROUTES.open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ThrowbackBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Dit kaartje terug gooien\"))) : null), openStore.answer ? React.createElement(React.Fragment, null, React.createElement(Keyboard, {\n    store: openStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleAnswerCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Klaar\")) : null);\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 0;\n\n  &:before {\n    content: \"\";\n    display: block;\n    width: 88rem;\n    height: 80rem;\n    background-image: url(${envelope});\n    background-size: contain;\n    background-repeat: no-repeat;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n  }\n`;\nconst CardWrapper = styled.div`\n  transform: translateX(26rem);\n`;\nconst Buttons = styled.div`\n  position: absolute;\n  top: 45%;\n  left: 20rem;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst AnswerBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${turqoiseBtn});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 30rem;\n  height: 6rem;\n\n  color: white;\n  text-align: center;\n  font-size: 2rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  margin-bottom: 1rem;\n\n  &:focus {\n    transform: scale(0.95);\n    outline: none;\n  }\n`;\nconst ThrowbackBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${lightBtn});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 27rem;\n  height: 5rem;\n\n  color: #4da0a4;\n  text-align: center;\n  font-size: 2rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n\n  &:focus {\n    transform: scale(0.95);\n    outline: none;\n  }\n`;\nconst ThemeBalloon = styled.div`\n  position: absolute;\n  left: 30rem;\n  top: 5rem;\n\n  z-index: 99;\n\n  & p {\n    font-family: \"Nunito\";\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 4rem;\n    color: #a7e2e5;\n    text-align: center;\n\n    position: relative;\n    bottom: 16rem;\n\n    transform: rotate(-10deg);\n  }\n`;\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\nexport default inject(`openStore`, `writeStore`, `uiStore`)(observer(Answer));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx"],"names":["React","inject","observer","PropTypes","Card","Button","Link","ROUTES","Keyboard","styled","backgroundImage","envelope","turqoiseBtn","lightBtn","themeImgNl","themeImgFr","Answer","openStore","writeStore","uiStore","card","showCard","handleClickAnswer","console","log","answer","handleAnswerCard","answerCard","id","userLanguage","theme","cardFlipped","text","answers","locations","locationCreated","open","StyledPage","section","CardWrapper","div","Buttons","AnswerBtn","button","ThrowbackBtn","ThemeBalloon","propTypes","observableObject","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport Card from \"../components/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { ROUTES } from \"../constants\";\nimport Keyboard from \"../components/KeyboardInput\";\n\nimport styled from \"styled-components\";\nimport backgroundImage from \"../assets/img/onboardingBg.jpg\";\nimport envelope from \"../assets/img/openEnvelope.png\";\nimport turqoiseBtn from \"../assets/img/turqoiseBtn_s_dark.png\";\nimport lightBtn from \"../assets/img/lightBtn_s.png\";\nimport themeImgNl from \"../assets/img/themeMessageBubble_nl.png\";\nimport themeImgFr from \"../assets/img/themeMessageBubble_fr.png\";\n\nconst Answer = ({ openStore, writeStore, uiStore }) => {\n  const card = openStore.showCard();\n\n  const handleClickAnswer = () => {\n    console.log(\"kakwofd\");\n\n    openStore.answer = true;\n  };\n\n  const handleAnswerCard = () => {\n    console.log(\"answer\");\n    openStore.answerCard(card.id);\n  };\n\n  return (\n    <StyledPage>\n      <ThemeBalloon>\n        <img\n          src={uiStore.userLanguage === \"nl\" ? themeImgNl : themeImgFr}\n          width=\"400\"\n          alt=\"Textballoon with theme \"\n        />\n        <p>\"{card.theme}\"</p>\n      </ThemeBalloon>\n      <CardWrapper translate={openStore.answer ? \"26\" : \"0\"}>\n        <Card\n          isFlipped={writeStore.cardFlipped}\n          theme={card.theme}\n          message={card.text}\n          answers={card.answers}\n          locations={card.locations}\n          locationCreated={card.locationCreated}\n          writeStore={writeStore}\n          openStore={openStore}\n        />\n      </CardWrapper>\n      <Buttons>\n        {!openStore.answer ? (\n          <>\n            <AnswerBtn onClick={handleClickAnswer}>\n              Dit kaartje beantwoorden\n            </AnswerBtn>\n            <Link to={ROUTES.open}>\n              <ThrowbackBtn>Dit kaartje terug gooien</ThrowbackBtn>\n            </Link>\n          </>\n        ) : null}\n      </Buttons>\n      {openStore.answer ? (\n        <>\n          <Keyboard store={openStore} />\n          <Button onClick={handleAnswerCard}>Klaar</Button>\n        </>\n      ) : null}\n    </StyledPage>\n  );\n};\n\nconst StyledPage = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 0;\n\n  &:before {\n    content: \"\";\n    display: block;\n    width: 88rem;\n    height: 80rem;\n    background-image: url(${envelope});\n    background-size: contain;\n    background-repeat: no-repeat;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n  }\n`;\n\nconst CardWrapper = styled.div`\n  transform: translateX(26rem);\n`;\n\nconst Buttons = styled.div`\n  position: absolute;\n  top: 45%;\n  left: 20rem;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst AnswerBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${turqoiseBtn});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 30rem;\n  height: 6rem;\n\n  color: white;\n  text-align: center;\n  font-size: 2rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n  margin-bottom: 1rem;\n\n  &:focus {\n    transform: scale(0.95);\n    outline: none;\n  }\n`;\n\nconst ThrowbackBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  background-image: url(${lightBtn});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 27rem;\n  height: 5rem;\n\n  color: #4da0a4;\n  text-align: center;\n  font-size: 2rem;\n  font-family: \"Nunito\";\n  font-weight: bold;\n\n  &:focus {\n    transform: scale(0.95);\n    outline: none;\n  }\n`;\n\nconst ThemeBalloon = styled.div`\n  position: absolute;\n  left: 30rem;\n  top: 5rem;\n\n  z-index: 99;\n\n  & p {\n    font-family: \"Nunito\";\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 4rem;\n    color: #a7e2e5;\n    text-align: center;\n\n    position: relative;\n    bottom: 16rem;\n\n    transform: rotate(-10deg);\n  }\n`;\n\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`openStore`, `writeStore`, `uiStore`)(observer(Answer));\n"]},"metadata":{},"sourceType":"module"}