{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n/* eslint-disable no-constant-condition */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback, useControlled } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction defaultStringify(value) {\n  if (value == null) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (_typeof(value) === 'object') {\n    return Object.keys(value).map(function (key) {\n      return value[key];\n    }).join(' ');\n  }\n\n  return JSON.stringify(value);\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? defaultStringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onInputChange = props.onInputChange,\n      openProp = props.open,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  }\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue || (multiple ? [] : null),\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _React$useRef = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(''),\n      inputValueState = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState5 = React.useState(false),\n      focused = _React$useState5[0],\n      setFocused = _React$useState5[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(optionLabel, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState6 = React.useState(false),\n      openState = _React$useState6[0],\n      setOpenState = _React$useState6[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [inputValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    setValue(newValue);\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'option';\n\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(item, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null);\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            // We don't want to validate the form.\n            event.preventDefault();\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current]); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event);\n          } else if (clearOnEscape && inputValue !== '') {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue);\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index]);\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue);\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Restore the focus to the correct option.\n\n\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when first interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    if (firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.focus();\n\n      if (selectOnFocus) {\n        inputRef.current.select();\n      }\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' && (!disableOpenOnFocus || inputRef.current === document.activeElement)) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    var result = []; // used to keep track of key and indexes in the result array\n\n    var indexByKey = new Map();\n    var currentResultIndex = 0;\n    filteredOptions.forEach(function (option) {\n      var key = groupBy(option);\n\n      if (indexByKey.get(key) === undefined) {\n        indexByKey.set(key, currentResultIndex);\n        result.push({\n          key: key,\n          options: []\n        });\n        currentResultIndex += 1;\n      }\n\n      result[indexByKey.get(key)].options.push(option);\n    }); // now we can add the `index` property based on the options length\n\n    var indexCounter = 0;\n    result.forEach(function (option) {\n      option.index = indexCounter;\n      indexCounter += option.options.length;\n    });\n    groupedOptions = result;\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * The component name that is using this hook. Used for warnings.\n   */\n  componentName: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change).\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js"],"names":["_extends","_toConsumableArray","_slicedToArray","_typeof","React","PropTypes","setRef","useEventCallback","useControlled","stripDiacritics","string","normalize","replace","defaultStringify","value","Object","keys","map","key","join","JSON","stringify","createFilterOptions","config","arguments","length","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","_config$matchFrom","matchFrom","_config$stringify","_config$trim","trim","options","_ref","inputValue","input","toLowerCase","filter","option","candidate","indexOf","findIndex","array","comp","i","defaultFilterOptions","pageSize","useAutocomplete","props","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnEscape","clearOnEscape","_props$debug","debug","defaultValue","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disableListWra","disableListWrap","_props$disableOpenOnF","disableOpenOnFocus","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabel","x","_props$getOptionSelec","getOptionSelected","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","multiple","onChange","onClose","onOpen","onInputChange","openProp","open","_props$options","_props$selectOnFocus","selectOnFocus","valueProp","_props$componentName","componentName","_React$useState","useState","defaultId","setDefaultId","useEffect","concat","Math","round","random","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","selectedIndexRef","setHighlightedIndex","index","mouse","current","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollTop","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","_useControlled","controlled","default","name","_useControlled2","setValue","_React$useRef","isInputValueControlled","_React$useState4","inputValueState","setInputValue","_React$useState5","focused","setFocused","resetInputValue","event","newValue","newInputValue","optionLabel","process","env","NODE_ENV","console","error","_React$useRef2","isOpenControlled","_React$useState6","openState","setOpenState","inputValueIsSelectedValue","popupOpen","filteredOptions","some","value2","focusTag","tagToFocus","focus","validOptionIndex","direction","nextFocus","hasAttribute","disabled","getAttribute","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","abs","nextIndex","setSelectionRange","handleOpen","handleClose","handleValue","selectNewValue","origin","item","Array","isArray","itemIndex","valueItem","push","splice","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","preventDefault","stopPropagation","onKeyDown","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","isTouch","handleOptionTouchStart","handleOptionClick","blur","handleTagDelete","handleListboxRef","node","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","document","activeElement","dirty","groupedOptions","result","indexByKey","Map","currentResultIndex","forEach","get","set","indexCounter","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","propTypes","bool","classes","object","className","any","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback, useControlled } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction defaultStringify(value) {\n  if (value == null) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (_typeof(value) === 'object') {\n    return Object.keys(value).map(function (key) {\n      return value[key];\n    }).join(' ');\n  }\n\n  return JSON.stringify(value);\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? defaultStringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onInputChange = props.onInputChange,\n      openProp = props.open,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  }\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue || (multiple ? [] : null),\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _React$useRef = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(''),\n      inputValueState = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState5 = React.useState(false),\n      focused = _React$useState5[0],\n      setFocused = _React$useState5[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(optionLabel, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState6 = React.useState(false),\n      openState = _React$useState6[0],\n      setOpenState = _React$useState6[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [inputValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    setValue(newValue);\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'option';\n\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(item, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null);\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            // We don't want to validate the form.\n            event.preventDefault();\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current]); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event);\n          } else if (clearOnEscape && inputValue !== '') {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue);\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index]);\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue);\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Restore the focus to the correct option.\n\n\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when first interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    if (firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.focus();\n\n      if (selectOnFocus) {\n        inputRef.current.select();\n      }\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' && (!disableOpenOnFocus || inputRef.current === document.activeElement)) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    var result = []; // used to keep track of key and indexes in the result array\n\n    var indexByKey = new Map();\n    var currentResultIndex = 0;\n    filteredOptions.forEach(function (option) {\n      var key = groupBy(option);\n\n      if (indexByKey.get(key) === undefined) {\n        indexByKey.set(key, currentResultIndex);\n        result.push({\n          key: key,\n          options: []\n        });\n        currentResultIndex += 1;\n      }\n\n      result[indexByKey.get(key)].options.push(option);\n    }); // now we can add the `index` property based on the options length\n\n    var indexCounter = 0;\n    result.forEach(function (option) {\n      option.index = indexCounter;\n      indexCounter += option.options.length;\n    });\n    groupedOptions = result;\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * The component name that is using this hook. Used for warnings.\n   */\n  componentName: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change).\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};"]},"metadata":{},"sourceType":"module"}