{"ast":null,"code":"import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(_theme, _text, _locations, _answers, _uniqueId, pin, _id = uuid.v4()) {\n    this.setId = id => this.id = id;\n\n    this.setTheme = theme => this.theme = theme;\n\n    this.setText = text => this.text = text;\n\n    this.setLocations = locations => this.locations = locations;\n\n    this.setAnswers = answers => this.answers = answers;\n\n    this.setUniqueId = uniqueId => this.uniqueId = uniqueId;\n\n    this.remove = () => {\n      this.remove(this);\n    };\n\n    this.updateFromServer = values => {\n      this.setId(values._id);\n      this.setTheme(values.theme);\n      this.setText(values.text);\n      this.setLocations(values.locations);\n      this.answers(values.answers);\n      this.setUniqueId(values.uniqueId);\n    };\n\n    this.theme = _theme;\n    this.text = _text;\n    this.locations = _locations;\n    this.answers = _answers;\n    this.uniqueId = _uniqueId;\n  }\n\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action\n});\nexport default Card;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/models/Card.js"],"names":["uuid","decorate","observable","action","Card","constructor","theme","text","locations","answers","uniqueId","pin","id","v4","setId","setTheme","setText","setLocations","setAnswers","setUniqueId","remove","updateFromServer","values","_id"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,MAAD,EAAQC,KAAR,EAAcC,UAAd,EAAyBC,QAAzB,EAAkCC,SAAlC,EAA4CC,GAA5C,EAAiDC,GAAE,GAAGZ,IAAI,CAACa,EAAL,EAAtD,EAAiE;AAAA,SAQ5EC,KAR4E,GAQpEF,EAAE,IAAK,KAAKA,EAAL,GAAUA,EARmD;;AAAA,SAS5EG,QAT4E,GASjET,KAAK,IAAK,KAAKA,KAAL,GAAaA,KAT0C;;AAAA,SAU5EU,OAV4E,GAUlET,IAAI,IAAK,KAAKA,IAAL,GAAYA,IAV6C;;AAAA,SAW5EU,YAX4E,GAW7DT,SAAS,IAAK,KAAKA,SAAL,GAAiBA,SAX8B;;AAAA,SAY5EU,UAZ4E,GAY/DT,OAAO,IAAK,KAAKA,OAAL,GAAeA,OAZoC;;AAAA,SAa5EU,WAb4E,GAa9DT,QAAQ,IAAK,KAAKA,QAAL,GAAgBA,QAbiC;;AAAA,SAe5EU,MAf4E,GAenE,MAAM;AACb,WAAKA,MAAL,CAAY,IAAZ;AACD,KAjB2E;;AAAA,SAmB5EC,gBAnB4E,GAmBzDC,MAAM,IAAI;AAC3B,WAAKR,KAAL,CAAWQ,MAAM,CAACC,GAAlB;AACA,WAAKR,QAAL,CAAcO,MAAM,CAAChB,KAArB;AACA,WAAKU,OAAL,CAAaM,MAAM,CAACf,IAApB;AACA,WAAKU,YAAL,CAAkBK,MAAM,CAACd,SAAzB;AACA,WAAKC,OAAL,CAAaa,MAAM,CAACb,OAApB;AACA,WAAKU,WAAL,CAAiBG,MAAM,CAACZ,QAAxB;AACD,KA1B2E;;AAC1E,SAAKJ,KAAL,GAAaA,MAAb;AACA,SAAKC,IAAL,GAAYA,KAAZ;AACA,SAAKC,SAAL,GAAiBA,UAAjB;AACA,SAAKC,OAAL,GAAeA,QAAf;AACA,SAAKC,QAAL,GAAgBA,SAAhB;AACD;;AAPQ;;AA8BXT,QAAQ,CAACG,IAAD,EAAO;AACbQ,EAAAA,EAAE,EAAEV,UADS;AAEbI,EAAAA,KAAK,EAAEJ,UAFM;AAGbK,EAAAA,IAAI,EAAEL,UAHO;AAIbM,EAAAA,SAAS,EAAEN,UAJE;AAKbO,EAAAA,OAAO,EAAEP,UALI;AAMbQ,EAAAA,QAAQ,EAAER,UANG;AAObY,EAAAA,KAAK,EAAEX,MAPM;AAQbY,EAAAA,QAAQ,EAAEZ,MARG;AASba,EAAAA,OAAO,EAAEb,MATI;AAUbc,EAAAA,YAAY,EAAEd,MAVD;AAWbe,EAAAA,UAAU,EAAEf,MAXC;AAYbgB,EAAAA,WAAW,EAAEhB;AAZA,CAAP,CAAR;AAeA,eAAeC,IAAf","sourcesContent":["import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(theme, text, locations, answers, uniqueId, pin, id = uuid.v4()) {\n    this.theme = theme;\n    this.text = text;\n    this.locations = locations;\n    this.answers = answers;\n    this.uniqueId = uniqueId;\n  }\n\n  setId = id => (this.id = id);\n  setTheme = theme => (this.theme = theme);\n  setText = text => (this.text = text);\n  setLocations = locations => (this.locations = locations);\n  setAnswers = answers => (this.answers = answers);\n  setUniqueId = uniqueId => (this.uniqueId = uniqueId);\n\n  remove = () => {\n    this.remove(this);\n  };\n\n  updateFromServer = values => {\n    this.setId(values._id);\n    this.setTheme(values.theme);\n    this.setText(values.text);\n    this.setLocations(values.locations);\n    this.answers(values.answers);\n    this.setUniqueId(values.uniqueId);\n  };\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action\n});\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}