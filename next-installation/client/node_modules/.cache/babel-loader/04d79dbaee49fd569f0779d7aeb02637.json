{"ast":null,"code":"class Api {\n  constructor(entity) {\n    this.getAllCards = async () => {//get cards from db\n    };\n\n    this.createCard = async obj => {\n      console.log(`fetch: /api/${this.entity}`, obj);\n      const r = await fetch(`/api/${this.entity}`, this.getOptions(`post`, obj));\n      return await r.json();\n    };\n\n    this.getOptions = (method, body = null, upload = false) => {\n      const options = {\n        method: method.toUpperCase()\n      };\n\n      if (!upload) {\n        options.headers = {\n          \"content-type\": `application/json`\n        };\n      }\n\n      if (body) {\n        console.log(body);\n\n        if (upload) {\n          const formData = new FormData();\n\n          for (var key in body) {\n            formData.append(key, body[key]);\n          }\n\n          options.body = formData;\n        } else {\n          options.body = JSON.stringify(body);\n        }\n      }\n\n      return options;\n    };\n\n    this.entity = entity;\n    console.log(entity);\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/api/index.js"],"names":["Api","constructor","entity","getAllCards","createCard","obj","console","log","r","fetch","getOptions","json","method","body","upload","options","toUpperCase","headers","formData","FormData","key","append","JSON","stringify"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA,SAKpBC,WALoB,GAKN,YAAY,CACxB;AACD,KAPmB;;AAAA,SASpBC,UAToB,GASP,MAAMC,GAAN,IAAa;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAa,eAAc,KAAKL,MAAO,EAAvC,EAA0CG,GAA1C;AAEA,YAAMG,CAAC,GAAG,MAAMC,KAAK,CAAE,QAAO,KAAKP,MAAO,EAArB,EAAwB,KAAKQ,UAAL,CAAiB,MAAjB,EAAwBL,GAAxB,CAAxB,CAArB;AACA,aAAO,MAAMG,CAAC,CAACG,IAAF,EAAb;AACD,KAdmB;;AAAA,SAgBpBD,UAhBoB,GAgBP,CAACE,MAAD,EAASC,IAAI,GAAG,IAAhB,EAAsBC,MAAM,GAAG,KAA/B,KAAyC;AACpD,YAAMC,OAAO,GAAG;AACdH,QAAAA,MAAM,EAAEA,MAAM,CAACI,WAAP;AADM,OAAhB;;AAGA,UAAI,CAACF,MAAL,EAAa;AACXC,QAAAA,OAAO,CAACE,OAAR,GAAkB;AAChB,0BAAiB;AADD,SAAlB;AAGD;;AACD,UAAIJ,IAAJ,EAAU;AACRP,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;;AAEA,YAAIC,MAAJ,EAAY;AACV,gBAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,eAAK,IAAIC,GAAT,IAAgBP,IAAhB,EAAsB;AACpBK,YAAAA,QAAQ,CAACG,MAAT,CAAgBD,GAAhB,EAAqBP,IAAI,CAACO,GAAD,CAAzB;AACD;;AACDL,UAAAA,OAAO,CAACF,IAAR,GAAeK,QAAf;AACD,SAND,MAMO;AACLH,UAAAA,OAAO,CAACF,IAAR,GAAeS,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAf;AACD;AACF;;AACD,aAAOE,OAAP;AACD,KAvCmB;;AAClB,SAAKb,MAAL,GAAcA,MAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD;;AAJO;;AA2CV,eAAeF,GAAf","sourcesContent":["class Api {\n  constructor(entity) {\n    this.entity = entity;\n    console.log(entity);\n  }\n\n  getAllCards = async () => {\n    //get cards from db\n  };\n\n  createCard = async obj => {\n    console.log(`fetch: /api/${this.entity}`, obj);\n\n    const r = await fetch(`/api/${this.entity}`, this.getOptions(`post`, obj));\n    return await r.json();\n  };\n\n  getOptions = (method, body = null, upload = false) => {\n    const options = {\n      method: method.toUpperCase()\n    };\n    if (!upload) {\n      options.headers = {\n        \"content-type\": `application/json`\n      };\n    }\n    if (body) {\n      console.log(body);\n\n      if (upload) {\n        const formData = new FormData();\n        for (var key in body) {\n          formData.append(key, body[key]);\n        }\n        options.body = formData;\n      } else {\n        options.body = JSON.stringify(body);\n      }\n    }\n    return options;\n  };\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}