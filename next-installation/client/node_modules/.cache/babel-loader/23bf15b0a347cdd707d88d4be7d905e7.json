{"ast":null,"code":"import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(_theme, _text, _locations, _answers, _uniqueId, _pin, _id = uuid.v4()) {\n    this.setId = id => this.id = id;\n\n    this.setTheme = theme => this.theme = theme;\n\n    this.setText = text => this.text = text;\n\n    this.setLocations = locations => this.locations = locations;\n\n    this.setAnswers = answers => this.answers = answers;\n\n    this.setUniqueId = uniqueId => this.uniqueId = uniqueId;\n\n    this.setPin = pin => this.pin = pin;\n\n    this.remove = () => {\n      this.remove(this);\n    };\n\n    this.updateFromServer = values => {\n      this.setId(values._id);\n      this.setTheme(values.theme);\n      this.setText(values.text);\n      this.locations(values.locations);\n      this.answers(values.answers);\n      this.setUniqueId(values.uniqueId);\n      this.setPin(values.pin);\n    };\n\n    this.theme = _theme;\n    this.text = _text;\n    this.locations = _locations;\n    this.answers = _answers;\n    this.uniqueId = _uniqueId;\n    this.pin = _pin;\n  }\n\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  pin: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action,\n  setPin: action\n});\nexport default Card;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/models/Card.js"],"names":["uuid","decorate","observable","action","Card","constructor","theme","text","locations","answers","uniqueId","pin","id","v4","setId","setTheme","setText","setLocations","setAnswers","setUniqueId","setPin","remove","updateFromServer","values","_id"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,MAAD,EAAQC,KAAR,EAAcC,UAAd,EAAyBC,QAAzB,EAAkCC,SAAlC,EAA4CC,IAA5C,EAAiDC,GAAE,GAAGZ,IAAI,CAACa,EAAL,EAAtD,EAAiE;AAAA,SAS5EC,KAT4E,GASpEF,EAAE,IAAK,KAAKA,EAAL,GAAUA,EATmD;;AAAA,SAU5EG,QAV4E,GAUjET,KAAK,IAAK,KAAKA,KAAL,GAAaA,KAV0C;;AAAA,SAW5EU,OAX4E,GAWlET,IAAI,IAAK,KAAKA,IAAL,GAAYA,IAX6C;;AAAA,SAY5EU,YAZ4E,GAY7DT,SAAS,IAAK,KAAKA,SAAL,GAAiBA,SAZ8B;;AAAA,SAa5EU,UAb4E,GAa/DT,OAAO,IAAK,KAAKA,OAAL,GAAeA,OAboC;;AAAA,SAc5EU,WAd4E,GAc9DT,QAAQ,IAAK,KAAKA,QAAL,GAAgBA,QAdiC;;AAAA,SAe5EU,MAf4E,GAenET,GAAG,IAAK,KAAKA,GAAL,GAAWA,GAfgD;;AAAA,SAiB5EU,MAjB4E,GAiBnE,MAAM;AACb,WAAKA,MAAL,CAAY,IAAZ;AACD,KAnB2E;;AAAA,SAqB5EC,gBArB4E,GAqBzDC,MAAM,IAAI;AAC3B,WAAKT,KAAL,CAAWS,MAAM,CAACC,GAAlB;AACA,WAAKT,QAAL,CAAcQ,MAAM,CAACjB,KAArB;AACA,WAAKU,OAAL,CAAaO,MAAM,CAAChB,IAApB;AACA,WAAKC,SAAL,CAAee,MAAM,CAACf,SAAtB;AACA,WAAKC,OAAL,CAAac,MAAM,CAACd,OAApB;AACA,WAAKU,WAAL,CAAiBI,MAAM,CAACb,QAAxB;AACA,WAAKU,MAAL,CAAYG,MAAM,CAACZ,GAAnB;AACD,KA7B2E;;AAC1E,SAAKL,KAAL,GAAaA,MAAb;AACA,SAAKC,IAAL,GAAYA,KAAZ;AACA,SAAKC,SAAL,GAAiBA,UAAjB;AACA,SAAKC,OAAL,GAAeA,QAAf;AACA,SAAKC,QAAL,GAAgBA,SAAhB;AACA,SAAKC,GAAL,GAAWA,IAAX;AACD;;AARQ;;AAiCXV,QAAQ,CAACG,IAAD,EAAO;AACbQ,EAAAA,EAAE,EAAEV,UADS;AAEbI,EAAAA,KAAK,EAAEJ,UAFM;AAGbK,EAAAA,IAAI,EAAEL,UAHO;AAIbM,EAAAA,SAAS,EAAEN,UAJE;AAKbO,EAAAA,OAAO,EAAEP,UALI;AAMbQ,EAAAA,QAAQ,EAAER,UANG;AAObS,EAAAA,GAAG,EAAET,UAPQ;AAQbY,EAAAA,KAAK,EAAEX,MARM;AASbY,EAAAA,QAAQ,EAAEZ,MATG;AAUba,EAAAA,OAAO,EAAEb,MAVI;AAWbc,EAAAA,YAAY,EAAEd,MAXD;AAYbe,EAAAA,UAAU,EAAEf,MAZC;AAabgB,EAAAA,WAAW,EAAEhB,MAbA;AAcbiB,EAAAA,MAAM,EAAEjB;AAdK,CAAP,CAAR;AAiBA,eAAeC,IAAf","sourcesContent":["import uuid from \"uuid\";\nimport { decorate, observable, action } from \"mobx\";\n\nclass Card {\n  constructor(theme, text, locations, answers, uniqueId, pin, id = uuid.v4()) {\n    this.theme = theme;\n    this.text = text;\n    this.locations = locations;\n    this.answers = answers;\n    this.uniqueId = uniqueId;\n    this.pin = pin;\n  }\n\n  setId = id => (this.id = id);\n  setTheme = theme => (this.theme = theme);\n  setText = text => (this.text = text);\n  setLocations = locations => (this.locations = locations);\n  setAnswers = answers => (this.answers = answers);\n  setUniqueId = uniqueId => (this.uniqueId = uniqueId);\n  setPin = pin => (this.pin = pin);\n\n  remove = () => {\n    this.remove(this);\n  };\n\n  updateFromServer = values => {\n    this.setId(values._id);\n    this.setTheme(values.theme);\n    this.setText(values.text);\n    this.locations(values.locations);\n    this.answers(values.answers);\n    this.setUniqueId(values.uniqueId);\n    this.setPin(values.pin);\n  };\n}\n\ndecorate(Card, {\n  id: observable,\n  theme: observable,\n  text: observable,\n  locations: observable,\n  answers: observable,\n  uniqueId: observable,\n  pin: observable,\n  setId: action,\n  setTheme: action,\n  setText: action,\n  setLocations: action,\n  setAnswers: action,\n  setUniqueId: action,\n  setPin: action\n});\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}