{"ast":null,"code":"import { decorate, observable, action } from \"mobx\";\nimport Api from \"../api/index\";\n\nclass OpenStore {\n  constructor(rootStore) {\n    this.cards = [];\n\n    this.getCards = () => {\n      this.api.getAllCards().then(newCards => {\n        if (newCards.length > 0) {\n          newCards.forEach(newCard => this.addNewCard(newCard));\n        }\n      });\n    };\n\n    this.rootStore = rootStore;\n    this.api = new Api(`cards`);\n    this.socket = rootStore.uiStore.socket;\n    this.getCards(); //this.socket.on(`getCard`, this.getCards);\n  }\n\n}\n\ndecorate(OpenStore, {\n  cards: observable,\n  getCards: action\n});\nexport default OpenStore;","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/store/OpenStore.js"],"names":["decorate","observable","action","Api","OpenStore","constructor","rootStore","cards","getCards","api","getAllCards","then","newCards","length","forEach","newCard","addNewCard","socket","uiStore"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,SAAN,CAAgB;AAGdC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAFvBC,KAEuB,GAFf,EAEe;;AAAA,SAQvBC,QARuB,GAQZ,MAAM;AACf,WAAKC,GAAL,CAASC,WAAT,GAAuBC,IAAvB,CAA4BC,QAAQ,IAAI;AACtC,YAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACvBD,UAAAA,QAAQ,CAACE,OAAT,CAAiBC,OAAO,IAAI,KAAKC,UAAL,CAAgBD,OAAhB,CAA5B;AACD;AACF,OAJD;AAKD,KAdsB;;AACrB,SAAKT,SAAL,GAAiBA,SAAjB;AACA,SAAKG,GAAL,GAAW,IAAIN,GAAJ,CAAS,OAAT,CAAX;AACA,SAAKc,MAAL,GAAcX,SAAS,CAACY,OAAV,CAAkBD,MAAhC;AACA,SAAKT,QAAL,GAJqB,CAKrB;AACD;;AATa;;AAoBhBR,QAAQ,CAACI,SAAD,EAAY;AAClBG,EAAAA,KAAK,EAAEN,UADW;AAElBO,EAAAA,QAAQ,EAAEN;AAFQ,CAAZ,CAAR;AAKA,eAAeE,SAAf","sourcesContent":["import { decorate, observable, action } from \"mobx\";\nimport Api from \"../api/index\";\n\nclass OpenStore {\n  cards = [];\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.api = new Api(`cards`);\n    this.socket = rootStore.uiStore.socket;\n    this.getCards();\n    //this.socket.on(`getCard`, this.getCards);\n  }\n\n  getCards = () => {\n    this.api.getAllCards().then(newCards => {\n      if (newCards.length > 0) {\n        newCards.forEach(newCard => this.addNewCard(newCard));\n      }\n    });\n  };\n}\n\ndecorate(OpenStore, {\n  cards: observable,\n  getCards: action\n});\n\nexport default OpenStore;\n"]},"metadata":{},"sourceType":"module"}