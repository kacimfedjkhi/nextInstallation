{"ast":null,"code":"var _jsxFileName = \"/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx\";\nimport React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport Card from \"../components/Card\";\n\nconst Answer = ({\n  openStore,\n  writeStore\n}) => {\n  const card = openStore.showCard();\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Dit is jou gekozen kaartje binnen het thema \\\"\", card.theme, \"\\\"!\"), React.createElement(Card, {\n    isFlipped: writeStore.cardFlipped,\n    theme: card.theme,\n    message: card.text,\n    answers: card.answers,\n    writeStore: writeStore,\n    openStore: openStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\nexport default inject(`openStore`, `writeStore`)(observer(Answer));","map":{"version":3,"sources":["/Users/kacimfedjkhi/stack/BAP/DEV/installation/nextInstallation/next-installation/client/src/containers/Answer.jsx"],"names":["React","inject","observer","PropTypes","Card","Answer","openStore","writeStore","card","showCard","theme","cardFlipped","text","answers","propTypes","observableObject","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,YAA5C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AAC5C,QAAMC,IAAI,GAAGF,SAAS,CAACG,QAAV,EAAb;AAEA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAkDD,IAAI,CAACE,KAAvD,QADF,EAEE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEH,UAAU,CAACI,WADxB;AAEE,IAAA,KAAK,EAAEH,IAAI,CAACE,KAFd;AAGE,IAAA,OAAO,EAAEF,IAAI,CAACI,IAHhB;AAIE,IAAA,OAAO,EAAEJ,IAAI,CAACK,OAJhB;AAKE,IAAA,UAAU,EAAEN,UALd;AAME,IAAA,SAAS,EAAED,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD,CAlBD;;AAoBAD,MAAM,CAACS,SAAP,GAAmB;AACjBR,EAAAA,SAAS,EAAEH,SAAS,CAACY,gBAAV,CAA2BC;AADrB,CAAnB;AAIA,eAAef,MAAM,CAAE,WAAF,EAAe,YAAf,CAAN,CAAkCC,QAAQ,CAACG,MAAD,CAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { inject, observer, PropTypes } from \"mobx-react\";\nimport Card from \"../components/Card\";\n\nconst Answer = ({ openStore, writeStore }) => {\n  const card = openStore.showCard();\n\n  return (\n    <>\n      <h1>Dit is jou gekozen kaartje binnen het thema \"{card.theme}\"!</h1>\n      <Card\n        isFlipped={writeStore.cardFlipped}\n        theme={card.theme}\n        message={card.text}\n        answers={card.answers}\n        writeStore={writeStore}\n        openStore={openStore}\n      />\n      <Button></Button>\n      <Button></Button>\n    </>\n  );\n};\n\nAnswer.propTypes = {\n  openStore: PropTypes.observableObject.isRequired\n};\n\nexport default inject(`openStore`, `writeStore`)(observer(Answer));\n"]},"metadata":{},"sourceType":"module"}